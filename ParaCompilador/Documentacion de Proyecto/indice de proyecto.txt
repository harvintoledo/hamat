Dedicatoria
Agradecimientos
Resumen - obligatorio
1- Introduccion - primera que se numera
-Antecedentes
-Metodologia de desarrollo de software
2- Objetivos gra y especifico
3- Justificacion
4- Marco teorico
4.1- Herramientas de Desarrollo
4.1.1- QT Creator
4.1.2- Visual Studio
4.1.2.1- Net Framework
4.1.2.2- C#
4.1.3- NetBeans
4.1.3.1- Java
4.1.3.2- Maven
4.2- Aplicacion OCCAM

 - Herramientas, base fundamental, los tipos de generacion de codigo, analis lexico y sintactico, 
 recepcion y reconocimiento de codigo de ensamblador,
 runtime de ejecucion
5- Analisis y presentacion de resultados - Desarrollo 

6- Bibliografia
7- Anexos





1. Contenido
2. Introduccion
UNIDAD I
INTRODUCCION AL
LENGUAJE ENSAMBLADOR
1.1. Lenguaje de Bajo Nivel.
1.2. Ventajas de los Lenguajes Ensambladores.

UNIDAD II
EL PROCESADOR
2.1. Unidades Funcionales Básicas.
2.1.1. Unidad Central de Procesos.
2.1.2. Unidad de Memoria Principal.
2.1.3. Unidad de Entradas y Salidas.
2.1.4. Interconexión de las Unidades Funcionales.
2.2. Registros Internos del Procesador.

UNIDAD III
LA MEMORIA PRINCIPAL
3.1. Segmento.
3.2. Desplazamiento.
3.3. Métodos de Direccionamiento.

UNIDAD IV
INTRODUCCION A LOS SERVICIOS
DE INTERRUPCION
4.1. Concepto de Interrupción.
4.2. Tabla de Servicios de Interrupción.
4.3. Eventos de una Interrupción.
4.5. Interrupción de BIOS.
4.6. Interrupción de DOS.

 UNIDAD V
ESTRUCTURA DE UN PROGRAMA
EN LENGUAJE ENSAMBLADOR
5.1. Elementos Básicos.
5.2. Directivas de Segmento.

UNIDAD VI
INTRUCCIONES BASICAS
6.1. Transferencia de Datos.
6.2. Suma y Resta.
6.3. Operaciones Lógicas.
6.4. Corrimiento y Rotación.
6.5. Multiplicación y División.
6.6. Comparación.
6.7. Saltos Condicionales e Incondicionales.

UNIDAD VII
PROCEDIMIENTOS
7.1. Definición.
7.2. Llamada.

UNIDAD VIII
MACROS
8.1. Introducción.
8.2. Definición de una Macro.
8.3. Manejo de Paramétros.
8.4. Manejo de Etiquetas Locales.
8.5. Bibliotecas de Macros.




1. Arquitectura de dos direcciones
1.1 Introduccion a arquitectura de dos direcciones
1.2 Codigo de instrucciones
1.2.1 Instrucciones de transferencia de datos
1.2.1.1 Instruccion MOV
1.2.2 Instrucciones aritmeticas
1.2.2.1 Instruccion ADD
1.2.2 Instrucciones logicas

2. Arquitectura de pila
2.1 Introduccion a arquitectura de pila
3. Arquitectura de tres direcciones
3.1 Introduccion a arquitectura de tres direcciones
Referencia

1. www.snip.gob.ni/xdc/amc2/Unidad2.ppt
1. Aho, setti eidicon 2002 Construccion de compiladores

https://es.wikipedia.org/wiki/Lenguaje_de_bajo_nivel
http://www.carlospes.com/minidiccionario/lenguaje_de_bajo_nivel.php
http://www.angelfire.com/ak5/seccion-academica/Ventajas_y_desventajas_del_Lenguaje_Ensamblador.htm

ALU y UC
http://www.monografias.com/trabajos58/arquitectura-computador/arquitectura-computador2.shtml