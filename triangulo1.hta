<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>programa1.nohemi</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<meta name="generator" content="Analizador y Coloreador de Gramaticas - COMPILADOR HAMAT" />
<meta name="author" content="Harvin Manuel Toledo Polanco" />
<meta name="keywords" content="harvin,toledo, compiladores, nohemi, analizador, parsing, sintatico, semantico" />
<style type="text/css">
<!--
body {color: #000000; background-color: #FFFFFF; }
.nohemi-ensamblador { color: #000000; }
.nohemi-caracter { color: #000000; }
.nohemi-comentario { color: #008000; }
.nohemi-flotante { color: #000000; }
.nohemi-hexadecimal { color: #000000; }
.nohemi-identificador { color: #002200; font-weight: bold; }
.nohemi-caracterilegal { color: #FF0000; }
.nohemi-numero { color: #000000; }
.nohemi-octal { color: #000000; }
.nohemi-preprocesador { color: #0000FF; }
.nohemi-palabrareservada { color: #0000FF; font-weight: bold;  }
.nohemi-espacio { background-color: #FFFFFF; }
.nohemi-cadena { color: #FF00FF; font-weight: bold; }
.nohemi-simbolo { color: #000000; }
-->
</style>
</head>
<body>
<pre>
<code>
<span style="font:12pt Courier New "<span class="nohemi-comentario">/**  Fecha de Registro de Compilacion: </span><br>
<span class="nohemi-comentario">Lunes 9 de Diciembre de 2013</span><br>
<span class="nohemi-comentario">/**  Hora  de Registro de Compilacion: </span><br><span class="nohemi-comentario">23:18'51"*/</span><br>

<span class="nohemi-comentario">/* Compilacion de lenguaje nohemi<br>
<span class="nohemi-comentario">/* Un ejemplo generado por la gramática anterior:*/</span><br><br>
<br>
<span class="nohemi-comentario">/* Segunda versión de programa triangulo
	Realizado por Harvin Toledo Polanco
	Fecha: Jueves, 10 de noviembre de 2011
	e-mail: harvintoledo@gmail.com
	Ilustra algunos elementos del lenguaje NOHEMI
	Para proyecto Compilador HAMAT
*/</span><br><br>
<span class="nohemi-palabrareservada">programa</span> <span class="nohemi-identificador">triangulo</span>;<br>
<br>
<span class="nohemi-palabrareservada">procedimiento</span> <span class="nohemi-identificador">principal</span><br>
{<br>
<span class="nohemi-palabrareservada">real</span> <span class="nohemi-identificador">lado_a</span>;<br>
<span class="nohemi-palabrareservada">real</span> <span class="nohemi-identificador">lado_b</span>;<br>
<span class="nohemi-palabrareservada">real</span> <span class="nohemi-identificador">lado_c</span>;<br>
<span class="nohemi-palabrareservada">real</span> <span class="nohemi-identificador">lado_mayor</span>;<br>
<span class="nohemi-palabrareservada">real</span> <span class="nohemi-identificador">existe</span>;<br>
<span class="nohemi-palabrareservada">real</span> <span class="nohemi-identificador">falso</span>;<br>
<span class="nohemi-palabrareservada">real</span> <span class="nohemi-identificador">verdadero</span>;<br>
<span class="nohemi-palabrareservada">real</span> <span class="nohemi-identificador">tipo</span>;<br>
<span class="nohemi-palabrareservada">real</span> <span class="nohemi-identificador">suma</span>;<br>
<br>
<span class="nohemi-comentario">/* tipo=3 equilátero, tipo=2 isósceles; tipo  =1 escaleno */</span><br><br>
<span class="nohemi-comentario">/* booleana existe=falso; suponemos que triangulo no existe */</span><br><br>
<br>
<span class="nohemi-identificador">escribir</span>(<span class="nohemi-cadena">&quot;Ingrese los lados del triangulo\n&quot;</span>);<br>
<span class="nohemi-identificador">escribir</span>(<span class="nohemi-cadena">&quot;ingrese lado a &quot;</span>);<br>
<span class="nohemi-identificador">leer</span>(<span class="nohemi-identificador">lado_a</span>);<br>
<span class="nohemi-identificador">escribir</span> (<span class="nohemi-cadena">&quot;Ingrese lado b &quot;</span>);<br>
<span class="nohemi-identificador">leer</span>(<span class="nohemi-identificador">lado_b</span>);<br>
<span class="nohemi-identificador">escribir</span> (<span class="nohemi-cadena">&quot;Ingrese lado c &quot;</span>);<br>
<span class="nohemi-identificador">leer</span>(<span class="nohemi-identificador">lado_c</span>);<br>
<br>
<span class="nohemi-comentario">/* si el triangulo es equilatero */</span><br><br>
<span class="nohemi-palabrareservada">si</span> (<span class="nohemi-identificador">lado_a</span> == <span class="nohemi-identificador">lado_b</span> &amp;&amp; <span class="nohemi-identificador">lado_b</span> == <span class="nohemi-identificador">lado_c</span><br>
&amp;&amp; <span class="nohemi-identificador">lado_b</span>== <span class="nohemi-identificador">lado_c</span>)<br>
{<br>
<span class="nohemi-identificador">existe</span>=<span class="nohemi-identificador">verdadero</span>;<br>
}<br>
<span class="nohemi-palabrareservada">sino</span><br>
<span class="nohemi-comentario">/* el triangulo es isósceles */</span><br><br>
<span class="nohemi-palabrareservada">si</span> (<span class="nohemi-identificador">lado_a</span> == <span class="nohemi-identificador">lado_b</span> || <span class="nohemi-identificador">lado_a</span> == <span class="nohemi-identificador">lado_c</span> ||<br>
<span class="nohemi-identificador">lado_b</span> == <span class="nohemi-identificador">lado_c</span>)<br>
{<br>
<span class="nohemi-identificador">tipo</span>=<span class="nohemi-numero">32e-15</span>;<br>
<span class="nohemi-identificador">existe</span>=<span class="nohemi-identificador">verdadero</span>;<br>
}<br>
<span class="nohemi-comentario">/* el triangulo es escaleno */</span><br><br>
<span class="nohemi-palabrareservada">sino</span><br>
{<br>
<span class="nohemi-palabrareservada">si</span> (<span class="nohemi-identificador">lado_a</span> &gt; <span class="nohemi-identificador">lado_b</span>)<br>
{<br>
<span class="nohemi-identificador">lado_mayor</span> = <span class="nohemi-identificador">lado_a</span>;<br>
}<br>
<span class="nohemi-palabrareservada">sino</span><br>
{<br>
<span class="nohemi-identificador">lado_mayor</span> = <span class="nohemi-identificador">lado_b</span>;<br>
};<br>
<br>
<br>
<span class="nohemi-palabrareservada">si</span> (<span class="nohemi-identificador">lado_c</span> &gt; <span class="nohemi-identificador">lado_mayor</span>)<br>
{<br>
<span class="nohemi-identificador">lado_mayor</span> = <span class="nohemi-identificador">lado_c</span>;<br>
};<br>
<br>
<span class="nohemi-comentario">/* si uno de los lados es el mayor hacer la respectiva suma */</span><br><br>
<br>
<span class="nohemi-palabrareservada">si</span> (<span class="nohemi-identificador">lado_a</span> == <span class="nohemi-identificador">lado_mayor</span>)<br>
{<br>
<span class="nohemi-identificador">suma</span> = <span class="nohemi-identificador">lado_b</span> + <span class="nohemi-identificador">lado_c</span>;<br>
}<br>
<span class="nohemi-palabrareservada">sino</span><br>
<span class="nohemi-palabrareservada">si</span> (<span class="nohemi-identificador">lado_b</span> == <span class="nohemi-identificador">lado_mayor</span>)<br>
{<br>
<span class="nohemi-identificador">suma</span> = <span class="nohemi-identificador">lado_a</span> + <span class="nohemi-identificador">lado_c</span>;<br>
}<br>
<span class="nohemi-palabrareservada">sino</span><br>
{<br>
<span class="nohemi-identificador">suma</span> = <span class="nohemi-identificador">lado_a</span> + <span class="nohemi-identificador">lado_b</span>;<br>
}<br>
<br>
<span class="nohemi-palabrareservada">si</span> (<span class="nohemi-identificador">suma</span> &gt;= <span class="nohemi-identificador">lado_mayor</span>)<br>
{<br>
<span class="nohemi-identificador">tipo</span> = <span class="nohemi-numero">1</span>;<br>
<span class="nohemi-identificador">existe</span> = <span class="nohemi-identificador">verdadero</span>;<br>
}<br>
<span class="nohemi-palabrareservada">sino</span><br>
{<br>
<span class="nohemi-identificador">tipo</span> = <span class="nohemi-numero">0</span>;<br>
<span class="nohemi-identificador">existe</span> = <span class="nohemi-identificador">falso</span>;<br>
}<br>
<br>
};<br>
<br>
<span class="nohemi-palabrareservada">si</span> ( <span class="nohemi-identificador">existe</span> == <span class="nohemi-identificador">verdadero</span> )<br>
{<br>
<br>
<span class="nohemi-identificador">escribir</span>(<span class="nohemi-cadena">&quot;El triangulo existe\n&quot;</span>);<br>
<span class="nohemi-palabrareservada">seleccionar</span>( <span class="nohemi-identificador">tipo</span> )<br>
{<br>
<span class="nohemi-palabrareservada">caso</span> <span class="nohemi-numero">1</span>&#58;<br>
<span class="nohemi-identificador">escribir</span> (<span class="nohemi-cadena">&quot;El triangulo es escaleno\n&quot;</span>);<br>
<span class="nohemi-palabrareservada">interrumpir</span>;<br>
<br>
<span class="nohemi-palabrareservada">caso</span> <span class="nohemi-numero">2</span>&#58;<br>
<span class="nohemi-identificador">escribir</span> (<span class="nohemi-cadena">&quot;El triangulo es isóseles\n&quot;</span>);<br>
<span class="nohemi-palabrareservada">interrumpir</span>;<br>
<br>
<span class="nohemi-palabrareservada">caso</span> <span class="nohemi-numero">3</span>&#58;<br>
<span class="nohemi-identificador">escribir</span> (<span class="nohemi-cadena">&quot;El triángulo es equilátero\n&quot;</span>);<br>
<span class="nohemi-palabrareservada">interrumpir</span>;<br>
<br>
<span class="nohemi-palabrareservada">alcontrario</span>&#58; <span class="nohemi-comentario">/* este nunca debería de ocurrir */</span><br><br>
<span class="nohemi-identificador">escribir</span> (<span class="nohemi-cadena">&quot;No se puede clasificar\n&quot;</span>);<br>
<br>
}<br>
}<br>
<span class="nohemi-palabrareservada">sino</span><br>
{<br>
<span class="nohemi-identificador">escribir</span> (<span class="nohemi-cadena">&quot;El triangulo no existe\n&quot;</span>);<br>
<span class="nohemi-identificador">escribir</span> (<span class="nohemi-cadena">&quot;El triangulo no se puede clasificar\n&quot;</span>);<br>
<br>
}<br>
<br>
}<br>
<br>
EOF
Registro del analisis sintactico y lexico para lenguaje nohemi */</span><br>

>>>Error sintactico en la linea 119: lexema inaceptable--> <span class="nohemi-palabrareservada">sino</span>        Programa: triangulo
    procedimiento: principal
      Variable
        Declaracion Global
          Tipo Variable: real
        Declaracion Global
          Tipo Variable: real
        Declaracion Global
          Tipo Variable: real
        Declaracion Global
          Tipo Variable: real
        Declaracion Global
          Tipo Variable: real
        Declaracion Global
          Tipo Variable: real
        Declaracion Global
          Tipo Variable: real
        Declaracion Global
          Tipo Variable: real
        Declaracion Global
          Tipo Variable: real
        Expresion Sentencia
          Expresion
            Llamada: escribir
              Argumentos: Ingrese los lados del triangulo\n
                Expresion
                  Cadena: Ingrese los lados del triangulo\n
        Expresion Sentencia
          Expresion
            Llamada: escribir
              Argumentos: ingrese lado a 
                Expresion
                  Cadena: ingrese lado a 
        Expresion Sentencia
          Expresion
            Llamada: leer
              Argumentos: lado_a
                Expresion
                  Variable: lado_a
        Expresion Sentencia
          Expresion
            Llamada: escribir
              Argumentos: Ingrese lado b 
                Expresion
                  Cadena: Ingrese lado b 
        Expresion Sentencia
          Expresion
            Llamada: leer
              Argumentos: lado_b
                Expresion
                  Variable: lado_b
        Expresion Sentencia
          Expresion
            Llamada: escribir
              Argumentos: Ingrese lado c 
                Expresion
                  Cadena: Ingrese lado c 
        Expresion Sentencia
          Expresion
            Llamada: leer
              Argumentos: lado_c
                Expresion
                  Variable: lado_c
        Si
          Operador: &amp;&amp;            Operador: &amp;&amp;              Operador: ==                Variable: lado_a
                Variable: lado_b
              Operador: ==                Variable: lado_b
                Variable: lado_c
            Operador: ==              Variable: lado_b
              Variable: lado_c
          Sentencia Compuesta
            Expresion Sentencia
              Expresion
                Variable: existe
                Expresion
                  Variable: verdadero
          Si
            Operador: ||              Operador: ||                Operador: ==                  Variable: lado_a
                  Variable: lado_b
                Operador: ==                  Variable: lado_a
                  Variable: lado_c
              Operador: ==                Variable: lado_b
                Variable: lado_c
            Sentencia Compuesta
              Expresion Sentencia
                Expresion
                  Variable: tipo
                  Expresion
                    Constante: 32
              Expresion Sentencia
                Expresion
                  Variable: existe
                  Expresion
                    Variable: verdadero
            Sentencia Compuesta
              Si
                Operador: &gt;                  Variable: lado_a
                  Variable: lado_b
                Sentencia Compuesta
                  Expresion Sentencia
                    Expresion
                      Variable: lado_mayor
                      Expresion
                        Variable: lado_a
                Sentencia Compuesta
                  Expresion Sentencia
                    Expresion
                      Variable: lado_mayor
                      Expresion
                        Variable: lado_b
                Expresion Sentencia
                Si
                  Operador: &gt;                    Variable: lado_c
                    Variable: lado_mayor
                  Sentencia Compuesta
                    Expresion Sentencia
                      Expresion
                        Variable: lado_mayor
                        Expresion
                          Variable: lado_c
                  Expresion Sentencia
                  Si
                    Operador: ==                      Variable: lado_a
                      Variable: lado_mayor
                    Sentencia Compuesta
                      Expresion Sentencia
                        Expresion
                          Variable: suma
                          Expresion
                            Operador: +                              Variable: lado_b
                              Variable: lado_c
                    Si
                      Operador: ==                        Variable: lado_b
                        Variable: lado_mayor
                      Sentencia Compuesta
                        Expresion Sentencia
                          Expresion
                            Variable: suma
                            Expresion
                              Operador: +                                Variable: lado_a
                                Variable: lado_c
                      Sentencia Compuesta
                        Expresion Sentencia
                          Expresion
                            Variable: suma
                            Expresion
                              Operador: +                                Variable: lado_a
                                Variable: lado_b
                      Si
                        Operador: &gt;=                          Variable: suma
                          Variable: lado_mayor
                        Sentencia Compuesta
                          Expresion Sentencia
                            Expresion
                              Variable: tipo
                              Expresion
                                Constante: 1
                          Expresion Sentencia
                            Expresion
                              Variable: existe
                              Expresion
                                Variable: verdadero
                        Sentencia Compuesta
                          Expresion Sentencia
                            Expresion
                              Variable: tipo
                              Expresion
                                Constante: 0
                          Expresion Sentencia
                            Expresion
                              Variable: existe
                              Expresion
                                Variable: falso
            Expresion Sentencia
            Si
              Operador: ==                Variable: existe
                Variable: verdadero
              Sentencia Compuesta
                Expresion Sentencia
                  Expresion
                    Llamada: escribir
                      Argumentos: El triangulo existe\n
                        Expresion
                          Cadena: El triangulo existe\n
                Seleccionar
                  Variable: tipo
                  Caso
                    Constante: 1
                    Expresion Sentencia
                      Expresion
                        Llamada: escribir
                          Argumentos: El triangulo es escaleno\n
                            Expresion
                              Cadena: El triangulo es escaleno\n
                  Caso
                    Constante: 2
                    Expresion Sentencia
                      Expresion
                        Llamada: escribir
                          Argumentos: El triangulo es isóseles\n
                            Expresion
                              Cadena: El triangulo es isóseles\n
                  Caso
                    Constante: 3
                    Expresion Sentencia
                      Expresion
                        Llamada: escribir
                          Argumentos: El triángulo es equilátero\n
                            Expresion
                              Cadena: El triángulo es equilátero\n
                  alcontrario
                    Expresion Sentencia
                      Expresion
                        Llamada: escribir
                          Argumentos: No se puede clasificar\n
                            Expresion
                              Cadena: No se puede clasificar\n
              Sentencia Compuesta
                Expresion Sentencia
                  Expresion
                    Llamada: escribir
                      Argumentos: El triangulo no existe\n
                        Expresion
                          Cadena: El triangulo no existe\n
                Expresion Sentencia
                  Expresion
                    Llamada: escribir
                      Argumentos: El triangulo no se puede clasificar\n
                        Expresion
                          Cadena: El triangulo no se puede clasificar\n
</code>
</pre>
</body></xml>