* Compilacion de Maquina hipotetica para Alexandra
* Archivo: triangulo1.emsb
* Preludio estandar
  0:     LD  6, 0(0) 	cargar maxaddress de la localizacion 0
  1:     ST  0, 0(0) 	borrar localización 0
* Fin del preludio estándar
* * Programa triangulo
* * TIPOARBOL_SENTENCIA_PARAMETROS principal
* * TIPOARBOL_SENTENCIA_VAR (null)
* * TIPOARBOL_SENTENCIA_GLOBAL (null)
* * TIPOARBOL_SENTENCIA_VARIABLE (null)
* * TIPOARBOL_SENTENCIA_GLOBAL (null)
* * TIPOARBOL_SENTENCIA_VARIABLE (null)
* * TIPOARBOL_SENTENCIA_GLOBAL (null)
* * TIPOARBOL_SENTENCIA_VARIABLE (null)
* * TIPOARBOL_SENTENCIA_GLOBAL (null)
* * TIPOARBOL_SENTENCIA_VARIABLE (null)
* * TIPOARBOL_SENTENCIA_GLOBAL (null)
* * TIPOARBOL_SENTENCIA_VARIABLE (null)
* * TIPOARBOL_SENTENCIA_GLOBAL (null)
* * TIPOARBOL_SENTENCIA_VARIABLE (null)
* * TIPOARBOL_SENTENCIA_GLOBAL (null)
* * TIPOARBOL_SENTENCIA_VARIABLE (null)
* * TIPOARBOL_SENTENCIA_GLOBAL (null)
* * TIPOARBOL_SENTENCIA_VARIABLE (null)
* * TIPOARBOL_SENTENCIA_GLOBAL (null)
* * TIPOARBOL_SENTENCIA_VARIABLE (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
* -> Identificador
* -> Identificador
  2:     ST  0, 0(6) 	op: push left
  3:     LD  1, 0(6) 	op: load left
  4:   SUB 0, 1, 0	op == 
  5:    JEQ  0, 2(7) 	br if true
  6:    LDC  0, 0(0) 	caso falso
  7:    LDA  7, 1(7) 	salto incodicional
  8:    LDC  0, 1(0) 	caso verdadero
* <- Op
  9:     ST  0, 0(6) 	op: push left
* -> Identificador
 10:     ST  0, -1(6) 	op: push left
 11:     LD  1, -1(6) 	op: load left
 12:   SUB 0, 1, 0	op == 
 13:    JEQ  0, 2(7) 	br if true
 14:    LDC  0, 0(0) 	caso falso
 15:    LDA  7, 1(7) 	salto incodicional
 16:    LDC  0, 1(0) 	caso verdadero
* <- Op
 17:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* -> Identificador
 18:     ST  0, 0(6) 	op: push left
 19:     LD  1, 0(6) 	op: load left
 20:   SUB 0, 1, 0	op == 
 21:    JEQ  0, 2(7) 	br if true
 22:    LDC  0, 0(0) 	caso falso
 23:    LDA  7, 1(7) 	salto incodicional
 24:    LDC  0, 1(0) 	caso verdadero
* <- Op
* -> Identificador
 25:     ST  0, 0(6) 	op: push left
 26:     LD  1, 0(6) 	op: load left
 27:   SUB 0, 1, 0	op == 
 28:    JEQ  0, 2(7) 	br if true
 29:    LDC  0, 0(0) 	caso falso
 30:    LDA  7, 1(7) 	salto incodicional
 31:    LDC  0, 1(0) 	caso verdadero
* <- Op
 32:     ST  0, 0(6) 	op: push left
* -> Identificador
 33:     ST  0, -1(6) 	op: push left
 34:     LD  1, -1(6) 	op: load left
 35:   SUB 0, 1, 0	op == 
 36:    JEQ  0, 2(7) 	br if true
 37:    LDC  0, 0(0) 	caso falso
 38:    LDA  7, 1(7) 	salto incodicional
 39:    LDC  0, 1(0) 	caso verdadero
* <- Op
 40:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* -> Identificador
* -> Identificador
 41:     ST  0, 0(6) 	op: push left
 42:     LD  1, 0(6) 	op: load left
 43:   SUB 0, 1, 0	op == 
 44:    JEQ  0, 2(7) 	br if true
 45:    LDC  0, 0(0) 	caso falso
 46:    LDA  7, 1(7) 	salto incodicional
 47:    LDC  0, 1(0) 	caso verdadero
* <- Op
 48:     ST  0, 0(6) 	op: push left
* -> Identificador
 49:     ST  0, -1(6) 	op: push left
 50:     LD  1, -1(6) 	op: load left
 51:   SUB 0, 1, 0	op == 
 52:    JEQ  0, 2(7) 	br if true
 53:    LDC  0, 0(0) 	caso falso
 54:    LDA  7, 1(7) 	salto incodicional
 55:    LDC  0, 1(0) 	caso verdadero
* <- Op
 56:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* -> Identificador
 57:     ST  0, 0(6) 	op: push left
 58:     LD  1, 0(6) 	op: load left
 59:   SUB 0, 1, 0	op == 
 60:    JEQ  0, 2(7) 	br if true
 61:    LDC  0, 0(0) 	caso falso
 62:    LDA  7, 1(7) 	salto incodicional
 63:    LDC  0, 1(0) 	caso verdadero
* <- Op
* -> Identificador
 64:     ST  0, 0(6) 	op: push left
 65:     LD  1, 0(6) 	op: load left
 66:   SUB 0, 1, 0	op == 
 67:    JEQ  0, 2(7) 	br if true
 68:    LDC  0, 0(0) 	caso falso
 69:    LDA  7, 1(7) 	salto incodicional
 70:    LDC  0, 1(0) 	caso verdadero
* <- Op
* -> Identificador
 71:     ST  0, 0(6) 	op: push left
 72:     LD  1, 0(6) 	op: load left
 73:   SUB 0, 1, 0	op == 
 74:    JEQ  0, 2(7) 	br if true
 75:    LDC  0, 0(0) 	caso falso
 76:    LDA  7, 1(7) 	salto incodicional
 77:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
 78:    JEQ 0, 1(7) 	si: jmp a sino
* -> Identificador
* -> Identificador
* -> Identificador
 80:     ST  0, 0(6) 	op: push left
 81:     LD  1, 0(6) 	op: load left
 82:   SUB 0, 1, 0	op == 
 83:    JEQ  0, 2(7) 	br if true
 84:    LDC  0, 0(0) 	caso falso
 85:    LDA  7, 1(7) 	salto incodicional
 86:    LDC  0, 1(0) 	caso verdadero
* <- Op
 87:     ST  0, 0(6) 	op: push left
* -> Identificador
 88:     ST  0, -1(6) 	op: push left
 89:     LD  1, -1(6) 	op: load left
 90:   SUB 0, 1, 0	op == 
 91:    JEQ  0, 2(7) 	br if true
 92:    LDC  0, 0(0) 	caso falso
 93:    LDA  7, 1(7) 	salto incodicional
 94:    LDC  0, 1(0) 	caso verdadero
* <- Op
 95:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* -> Identificador
 96:     ST  0, 0(6) 	op: push left
 97:     LD  1, 0(6) 	op: load left
 98:   SUB 0, 1, 0	op == 
 99:    JEQ  0, 2(7) 	br if true
100:    LDC  0, 0(0) 	caso falso
101:    LDA  7, 1(7) 	salto incodicional
102:    LDC  0, 1(0) 	caso verdadero
* <- Op
* -> Identificador
103:     ST  0, 0(6) 	op: push left
104:     LD  1, 0(6) 	op: load left
105:   SUB 0, 1, 0	op == 
106:    JEQ  0, 2(7) 	br if true
107:    LDC  0, 0(0) 	caso falso
108:    LDA  7, 1(7) 	salto incodicional
109:    LDC  0, 1(0) 	caso verdadero
* <- Op
110:     ST  0, 0(6) 	op: push left
* -> Identificador
111:     ST  0, -1(6) 	op: push left
112:     LD  1, -1(6) 	op: load left
113:   SUB 0, 1, 0	op == 
114:    JEQ  0, 2(7) 	br if true
115:    LDC  0, 0(0) 	caso falso
116:    LDA  7, 1(7) 	salto incodicional
117:    LDC  0, 1(0) 	caso verdadero
* <- Op
118:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* -> Identificador
* -> Identificador
119:     ST  0, 0(6) 	op: push left
120:     LD  1, 0(6) 	op: load left
121:   SUB 0, 1, 0	op == 
122:    JEQ  0, 2(7) 	br if true
123:    LDC  0, 0(0) 	caso falso
124:    LDA  7, 1(7) 	salto incodicional
125:    LDC  0, 1(0) 	caso verdadero
* <- Op
126:     ST  0, 0(6) 	op: push left
* -> Identificador
127:     ST  0, -1(6) 	op: push left
128:     LD  1, -1(6) 	op: load left
129:   SUB 0, 1, 0	op == 
130:    JEQ  0, 2(7) 	br if true
131:    LDC  0, 0(0) 	caso falso
132:    LDA  7, 1(7) 	salto incodicional
133:    LDC  0, 1(0) 	caso verdadero
* <- Op
134:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* -> Identificador
135:     ST  0, 0(6) 	op: push left
136:     LD  1, 0(6) 	op: load left
137:   SUB 0, 1, 0	op == 
138:    JEQ  0, 2(7) 	br if true
139:    LDC  0, 0(0) 	caso falso
140:    LDA  7, 1(7) 	salto incodicional
141:    LDC  0, 1(0) 	caso verdadero
* <- Op
* -> Identificador
142:     ST  0, 0(6) 	op: push left
143:     LD  1, 0(6) 	op: load left
144:   SUB 0, 1, 0	op == 
145:    JEQ  0, 2(7) 	br if true
146:    LDC  0, 0(0) 	caso falso
147:    LDA  7, 1(7) 	salto incodicional
148:    LDC  0, 1(0) 	caso verdadero
* <- Op
* -> Identificador
149:     ST  0, 0(6) 	op: push left
150:     LD  1, 0(6) 	op: load left
151:   SUB 0, 1, 0	op == 
152:    JEQ  0, 2(7) 	br if true
153:    LDC  0, 0(0) 	caso falso
154:    LDA  7, 1(7) 	salto incodicional
155:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
157:    LDC  0, 32(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
156:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* -> Identificador
159:     ST  0, 0(6) 	op: push left
160:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
161:    JEQ 0, 1(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* -> Identificador
163:     ST  0, 0(6) 	op: push left
164:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* -> Identificador
166:     ST  0, 0(6) 	op: push left
167:     LD  1, 0(6) 	op: load left
168:   SUB 0, 1, 0	op == 
169:    JEQ  0, 2(7) 	br if true
170:    LDC  0, 0(0) 	caso falso
171:    LDA  7, 1(7) 	salto incodicional
172:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
174:     ST  0, 0(6) 	op: push left
175:     LD  1, 0(6) 	op: load left
176:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
173:    JEQ 0, 4(7) 	si: jmp a sino
* -> Identificador
178:     ST  0, 0(6) 	op: push left
179:     LD  1, 0(6) 	op: load left
180:   SUB 0, 1, 0	op == 
181:    JEQ  0, 2(7) 	br if true
182:    LDC  0, 0(0) 	caso falso
183:    LDA  7, 1(7) 	salto incodicional
184:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
186:     ST  0, 0(6) 	op: push left
187:     LD  1, 0(6) 	op: load left
188:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
185:    JEQ 0, 4(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
190:     ST  0, 0(6) 	op: push left
191:     LD  1, 0(6) 	op: load left
192:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
193:     ST  0, 0(6) 	op: push left
194:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
196:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
195:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
198:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
197:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
199:     ST  0, 0(6) 	op: push left
200:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
201:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
202:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
189:    LDA 7, 13(7) 	jmp al final
* <- if
* -> Identificador
203:     ST  0, 0(6) 	op: push left
204:     LD  1, 0(6) 	op: load left
205:   SUB 0, 1, 0	op == 
206:    JEQ  0, 2(7) 	br if true
207:    LDC  0, 0(0) 	caso falso
208:    LDA  7, 1(7) 	salto incodicional
209:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
210:     ST  0, 0(6) 	op: push left
211:     LD  1, 0(6) 	op: load left
212:   ADD 0, 1, 0	op +
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
213:     ST  0, 0(6) 	op: push left
214:     LD  1, 0(6) 	op: load left
215:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
216:     ST  0, 0(6) 	op: push left
217:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
219:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
218:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
221:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
220:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
222:     ST  0, 0(6) 	op: push left
223:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
224:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
225:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
177:    LDA 7, 48(7) 	jmp al final
* <- if
* -> Identificador
226:     ST  0, 0(6) 	op: push left
227:     LD  1, 0(6) 	op: load left
228:   SUB 0, 1, 0	op == 
229:    JEQ  0, 2(7) 	br if true
230:    LDC  0, 0(0) 	caso falso
231:    LDA  7, 1(7) 	salto incodicional
232:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
233:     ST  0, 0(6) 	op: push left
234:     LD  1, 0(6) 	op: load left
235:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
236:     ST  0, 0(6) 	op: push left
237:     LD  1, 0(6) 	op: load left
238:   SUB 0, 1, 0	op == 
239:    JEQ  0, 2(7) 	br if true
240:    LDC  0, 0(0) 	caso falso
241:    LDA  7, 1(7) 	salto incodicional
242:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
244:     ST  0, 0(6) 	op: push left
245:     LD  1, 0(6) 	op: load left
246:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
243:    JEQ 0, 4(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
248:     ST  0, 0(6) 	op: push left
249:     LD  1, 0(6) 	op: load left
250:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
251:     ST  0, 0(6) 	op: push left
252:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
254:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
253:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
256:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
255:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
257:     ST  0, 0(6) 	op: push left
258:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
259:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
260:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
247:    LDA 7, 13(7) 	jmp al final
* <- if
* -> Identificador
261:     ST  0, 0(6) 	op: push left
262:     LD  1, 0(6) 	op: load left
263:   SUB 0, 1, 0	op == 
264:    JEQ  0, 2(7) 	br if true
265:    LDC  0, 0(0) 	caso falso
266:    LDA  7, 1(7) 	salto incodicional
267:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
268:     ST  0, 0(6) 	op: push left
269:     LD  1, 0(6) 	op: load left
270:   ADD 0, 1, 0	op +
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
271:     ST  0, 0(6) 	op: push left
272:     LD  1, 0(6) 	op: load left
273:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
274:     ST  0, 0(6) 	op: push left
275:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
277:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
276:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
279:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
278:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
280:     ST  0, 0(6) 	op: push left
281:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
282:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
283:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
165:    JEQ 0, 119(7) 	si: jmp a sino
284:    LDA 7, 0(7) 	jmp al final
* <- if
* -> Identificador
285:     ST  0, 0(6) 	op: push left
286:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* -> Identificador
287:     ST  0, 0(6) 	op: push left
288:     LD  1, 0(6) 	op: load left
289:   SUB 0, 1, 0	op == 
290:    JEQ  0, 2(7) 	br if true
291:    LDC  0, 0(0) 	caso falso
292:    LDA  7, 1(7) 	salto incodicional
293:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
295:     ST  0, 0(6) 	op: push left
296:     LD  1, 0(6) 	op: load left
297:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
294:    JEQ 0, 4(7) 	si: jmp a sino
* -> Identificador
299:     ST  0, 0(6) 	op: push left
300:     LD  1, 0(6) 	op: load left
301:   SUB 0, 1, 0	op == 
302:    JEQ  0, 2(7) 	br if true
303:    LDC  0, 0(0) 	caso falso
304:    LDA  7, 1(7) 	salto incodicional
305:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
307:     ST  0, 0(6) 	op: push left
308:     LD  1, 0(6) 	op: load left
309:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
306:    JEQ 0, 4(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
311:     ST  0, 0(6) 	op: push left
312:     LD  1, 0(6) 	op: load left
313:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
314:     ST  0, 0(6) 	op: push left
315:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
317:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
316:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
319:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
318:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
320:     ST  0, 0(6) 	op: push left
321:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
322:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
323:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
310:    LDA 7, 13(7) 	jmp al final
* <- if
* -> Identificador
324:     ST  0, 0(6) 	op: push left
325:     LD  1, 0(6) 	op: load left
326:   SUB 0, 1, 0	op == 
327:    JEQ  0, 2(7) 	br if true
328:    LDC  0, 0(0) 	caso falso
329:    LDA  7, 1(7) 	salto incodicional
330:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
331:     ST  0, 0(6) 	op: push left
332:     LD  1, 0(6) 	op: load left
333:   ADD 0, 1, 0	op +
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
334:     ST  0, 0(6) 	op: push left
335:     LD  1, 0(6) 	op: load left
336:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
337:     ST  0, 0(6) 	op: push left
338:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
340:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
339:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
342:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
341:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
343:     ST  0, 0(6) 	op: push left
344:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
345:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
346:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
298:    LDA 7, 48(7) 	jmp al final
* <- if
* -> Identificador
347:     ST  0, 0(6) 	op: push left
348:     LD  1, 0(6) 	op: load left
349:   SUB 0, 1, 0	op == 
350:    JEQ  0, 2(7) 	br if true
351:    LDC  0, 0(0) 	caso falso
352:    LDA  7, 1(7) 	salto incodicional
353:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
354:     ST  0, 0(6) 	op: push left
355:     LD  1, 0(6) 	op: load left
356:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
357:     ST  0, 0(6) 	op: push left
358:     LD  1, 0(6) 	op: load left
359:   SUB 0, 1, 0	op == 
360:    JEQ  0, 2(7) 	br if true
361:    LDC  0, 0(0) 	caso falso
362:    LDA  7, 1(7) 	salto incodicional
363:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
365:     ST  0, 0(6) 	op: push left
366:     LD  1, 0(6) 	op: load left
367:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
364:    JEQ 0, 4(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
369:     ST  0, 0(6) 	op: push left
370:     LD  1, 0(6) 	op: load left
371:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
372:     ST  0, 0(6) 	op: push left
373:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
375:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
374:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
377:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
376:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
378:     ST  0, 0(6) 	op: push left
379:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
380:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
381:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
368:    LDA 7, 13(7) 	jmp al final
* <- if
* -> Identificador
382:     ST  0, 0(6) 	op: push left
383:     LD  1, 0(6) 	op: load left
384:   SUB 0, 1, 0	op == 
385:    JEQ  0, 2(7) 	br if true
386:    LDC  0, 0(0) 	caso falso
387:    LDA  7, 1(7) 	salto incodicional
388:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
389:     ST  0, 0(6) 	op: push left
390:     LD  1, 0(6) 	op: load left
391:   ADD 0, 1, 0	op +
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
392:     ST  0, 0(6) 	op: push left
393:     LD  1, 0(6) 	op: load left
394:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
395:     ST  0, 0(6) 	op: push left
396:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
398:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
397:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
400:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
399:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
401:     ST  0, 0(6) 	op: push left
402:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
403:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
404:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
162:    LDA 7, 242(7) 	jmp al final
* <- if
* -> Identificador
405:     ST  0, 0(6) 	op: push left
406:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* -> Identificador
407:     ST  0, 0(6) 	op: push left
408:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* -> Identificador
410:     ST  0, 0(6) 	op: push left
411:     LD  1, 0(6) 	op: load left
412:   SUB 0, 1, 0	op == 
413:    JEQ  0, 2(7) 	br if true
414:    LDC  0, 0(0) 	caso falso
415:    LDA  7, 1(7) 	salto incodicional
416:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
418:     ST  0, 0(6) 	op: push left
419:     LD  1, 0(6) 	op: load left
420:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
417:    JEQ 0, 4(7) 	si: jmp a sino
* -> Identificador
422:     ST  0, 0(6) 	op: push left
423:     LD  1, 0(6) 	op: load left
424:   SUB 0, 1, 0	op == 
425:    JEQ  0, 2(7) 	br if true
426:    LDC  0, 0(0) 	caso falso
427:    LDA  7, 1(7) 	salto incodicional
428:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
430:     ST  0, 0(6) 	op: push left
431:     LD  1, 0(6) 	op: load left
432:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
429:    JEQ 0, 4(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
434:     ST  0, 0(6) 	op: push left
435:     LD  1, 0(6) 	op: load left
436:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
437:     ST  0, 0(6) 	op: push left
438:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
440:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
439:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
442:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
441:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
443:     ST  0, 0(6) 	op: push left
444:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
445:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
446:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
433:    LDA 7, 13(7) 	jmp al final
* <- if
* -> Identificador
447:     ST  0, 0(6) 	op: push left
448:     LD  1, 0(6) 	op: load left
449:   SUB 0, 1, 0	op == 
450:    JEQ  0, 2(7) 	br if true
451:    LDC  0, 0(0) 	caso falso
452:    LDA  7, 1(7) 	salto incodicional
453:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
454:     ST  0, 0(6) 	op: push left
455:     LD  1, 0(6) 	op: load left
456:   ADD 0, 1, 0	op +
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
457:     ST  0, 0(6) 	op: push left
458:     LD  1, 0(6) 	op: load left
459:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
460:     ST  0, 0(6) 	op: push left
461:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
463:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
462:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
465:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
464:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
466:     ST  0, 0(6) 	op: push left
467:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
468:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
469:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
421:    LDA 7, 48(7) 	jmp al final
* <- if
* -> Identificador
470:     ST  0, 0(6) 	op: push left
471:     LD  1, 0(6) 	op: load left
472:   SUB 0, 1, 0	op == 
473:    JEQ  0, 2(7) 	br if true
474:    LDC  0, 0(0) 	caso falso
475:    LDA  7, 1(7) 	salto incodicional
476:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
477:     ST  0, 0(6) 	op: push left
478:     LD  1, 0(6) 	op: load left
479:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
480:     ST  0, 0(6) 	op: push left
481:     LD  1, 0(6) 	op: load left
482:   SUB 0, 1, 0	op == 
483:    JEQ  0, 2(7) 	br if true
484:    LDC  0, 0(0) 	caso falso
485:    LDA  7, 1(7) 	salto incodicional
486:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
488:     ST  0, 0(6) 	op: push left
489:     LD  1, 0(6) 	op: load left
490:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
487:    JEQ 0, 4(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
492:     ST  0, 0(6) 	op: push left
493:     LD  1, 0(6) 	op: load left
494:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
495:     ST  0, 0(6) 	op: push left
496:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
498:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
497:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
500:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
499:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
501:     ST  0, 0(6) 	op: push left
502:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
503:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
504:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
491:    LDA 7, 13(7) 	jmp al final
* <- if
* -> Identificador
505:     ST  0, 0(6) 	op: push left
506:     LD  1, 0(6) 	op: load left
507:   SUB 0, 1, 0	op == 
508:    JEQ  0, 2(7) 	br if true
509:    LDC  0, 0(0) 	caso falso
510:    LDA  7, 1(7) 	salto incodicional
511:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
512:     ST  0, 0(6) 	op: push left
513:     LD  1, 0(6) 	op: load left
514:   ADD 0, 1, 0	op +
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
515:     ST  0, 0(6) 	op: push left
516:     LD  1, 0(6) 	op: load left
517:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
518:     ST  0, 0(6) 	op: push left
519:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
521:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
520:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
523:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
522:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
524:     ST  0, 0(6) 	op: push left
525:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
526:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
527:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
409:    JEQ 0, 119(7) 	si: jmp a sino
528:    LDA 7, 0(7) 	jmp al final
* <- if
* -> Identificador
529:     ST  0, 0(6) 	op: push left
530:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* -> Identificador
531:     ST  0, 0(6) 	op: push left
532:     LD  1, 0(6) 	op: load left
533:   SUB 0, 1, 0	op == 
534:    JEQ  0, 2(7) 	br if true
535:    LDC  0, 0(0) 	caso falso
536:    LDA  7, 1(7) 	salto incodicional
537:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
539:     ST  0, 0(6) 	op: push left
540:     LD  1, 0(6) 	op: load left
541:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
538:    JEQ 0, 4(7) 	si: jmp a sino
* -> Identificador
543:     ST  0, 0(6) 	op: push left
544:     LD  1, 0(6) 	op: load left
545:   SUB 0, 1, 0	op == 
546:    JEQ  0, 2(7) 	br if true
547:    LDC  0, 0(0) 	caso falso
548:    LDA  7, 1(7) 	salto incodicional
549:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
551:     ST  0, 0(6) 	op: push left
552:     LD  1, 0(6) 	op: load left
553:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
550:    JEQ 0, 4(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
555:     ST  0, 0(6) 	op: push left
556:     LD  1, 0(6) 	op: load left
557:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
558:     ST  0, 0(6) 	op: push left
559:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
561:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
560:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
563:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
562:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
564:     ST  0, 0(6) 	op: push left
565:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
566:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
567:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
554:    LDA 7, 13(7) 	jmp al final
* <- if
* -> Identificador
568:     ST  0, 0(6) 	op: push left
569:     LD  1, 0(6) 	op: load left
570:   SUB 0, 1, 0	op == 
571:    JEQ  0, 2(7) 	br if true
572:    LDC  0, 0(0) 	caso falso
573:    LDA  7, 1(7) 	salto incodicional
574:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
575:     ST  0, 0(6) 	op: push left
576:     LD  1, 0(6) 	op: load left
577:   ADD 0, 1, 0	op +
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
578:     ST  0, 0(6) 	op: push left
579:     LD  1, 0(6) 	op: load left
580:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
581:     ST  0, 0(6) 	op: push left
582:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
584:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
583:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
586:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
585:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
587:     ST  0, 0(6) 	op: push left
588:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
589:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
590:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
542:    LDA 7, 48(7) 	jmp al final
* <- if
* -> Identificador
591:     ST  0, 0(6) 	op: push left
592:     LD  1, 0(6) 	op: load left
593:   SUB 0, 1, 0	op == 
594:    JEQ  0, 2(7) 	br if true
595:    LDC  0, 0(0) 	caso falso
596:    LDA  7, 1(7) 	salto incodicional
597:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
598:     ST  0, 0(6) 	op: push left
599:     LD  1, 0(6) 	op: load left
600:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
601:     ST  0, 0(6) 	op: push left
602:     LD  1, 0(6) 	op: load left
603:   SUB 0, 1, 0	op == 
604:    JEQ  0, 2(7) 	br if true
605:    LDC  0, 0(0) 	caso falso
606:    LDA  7, 1(7) 	salto incodicional
607:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
609:     ST  0, 0(6) 	op: push left
610:     LD  1, 0(6) 	op: load left
611:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
608:    JEQ 0, 4(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
613:     ST  0, 0(6) 	op: push left
614:     LD  1, 0(6) 	op: load left
615:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
616:     ST  0, 0(6) 	op: push left
617:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
619:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
618:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
621:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
620:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
622:     ST  0, 0(6) 	op: push left
623:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
624:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
625:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
612:    LDA 7, 13(7) 	jmp al final
* <- if
* -> Identificador
626:     ST  0, 0(6) 	op: push left
627:     LD  1, 0(6) 	op: load left
628:   SUB 0, 1, 0	op == 
629:    JEQ  0, 2(7) 	br if true
630:    LDC  0, 0(0) 	caso falso
631:    LDA  7, 1(7) 	salto incodicional
632:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
633:     ST  0, 0(6) 	op: push left
634:     LD  1, 0(6) 	op: load left
635:   ADD 0, 1, 0	op +
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
636:     ST  0, 0(6) 	op: push left
637:     LD  1, 0(6) 	op: load left
638:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
639:     ST  0, 0(6) 	op: push left
640:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
642:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
641:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
644:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
643:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
645:     ST  0, 0(6) 	op: push left
646:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
647:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
648:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* -> Identificador
649:     ST  0, 0(6) 	op: push left
650:     LD  1, 0(6) 	op: load left
651:   SUB 0, 1, 0	op == 
652:    JEQ  0, 2(7) 	br if true
653:    LDC  0, 0(0) 	caso falso
654:    LDA  7, 1(7) 	salto incodicional
655:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SELECCIONAR (null)
* * TIPOARBOL_CASO_SENTENCIA (null)
* -> Constante
657:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_CASO_SENTENCIA (null)
* -> Constante
658:    LDC  0, 2(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_CASO_SENTENCIA (null)
* -> Constante
659:    LDC  0, 3(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_ALCONTRARIO (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
656:    JEQ 0, 4(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
660:    LDA 7, 0(7) 	jmp al final
* <- if
* -> Identificador
661:     ST  0, 0(6) 	op: push left
662:     LD  1, 0(6) 	op: load left
663:   SUB 0, 1, 0	op == 
664:    JEQ  0, 2(7) 	br if true
665:    LDC  0, 0(0) 	caso falso
666:    LDA  7, 1(7) 	salto incodicional
667:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SELECCIONAR (null)
* * TIPOARBOL_CASO_SENTENCIA (null)
* -> Constante
668:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_CASO_SENTENCIA (null)
* -> Constante
669:    LDC  0, 2(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_CASO_SENTENCIA (null)
* -> Constante
670:    LDC  0, 3(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_ALCONTRARIO (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
158:    LDA 7, 512(7) 	jmp al final
* <- if
* -> Identificador
* -> Identificador
* -> Identificador
671:     ST  0, 0(6) 	op: push left
672:     LD  1, 0(6) 	op: load left
673:   SUB 0, 1, 0	op == 
674:    JEQ  0, 2(7) 	br if true
675:    LDC  0, 0(0) 	caso falso
676:    LDA  7, 1(7) 	salto incodicional
677:    LDC  0, 1(0) 	caso verdadero
* <- Op
678:     ST  0, 0(6) 	op: push left
* -> Identificador
679:     ST  0, -1(6) 	op: push left
680:     LD  1, -1(6) 	op: load left
681:   SUB 0, 1, 0	op == 
682:    JEQ  0, 2(7) 	br if true
683:    LDC  0, 0(0) 	caso falso
684:    LDA  7, 1(7) 	salto incodicional
685:    LDC  0, 1(0) 	caso verdadero
* <- Op
686:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* -> Identificador
687:     ST  0, 0(6) 	op: push left
688:     LD  1, 0(6) 	op: load left
689:   SUB 0, 1, 0	op == 
690:    JEQ  0, 2(7) 	br if true
691:    LDC  0, 0(0) 	caso falso
692:    LDA  7, 1(7) 	salto incodicional
693:    LDC  0, 1(0) 	caso verdadero
* <- Op
* -> Identificador
694:     ST  0, 0(6) 	op: push left
695:     LD  1, 0(6) 	op: load left
696:   SUB 0, 1, 0	op == 
697:    JEQ  0, 2(7) 	br if true
698:    LDC  0, 0(0) 	caso falso
699:    LDA  7, 1(7) 	salto incodicional
700:    LDC  0, 1(0) 	caso verdadero
* <- Op
701:     ST  0, 0(6) 	op: push left
* -> Identificador
702:     ST  0, -1(6) 	op: push left
703:     LD  1, -1(6) 	op: load left
704:   SUB 0, 1, 0	op == 
705:    JEQ  0, 2(7) 	br if true
706:    LDC  0, 0(0) 	caso falso
707:    LDA  7, 1(7) 	salto incodicional
708:    LDC  0, 1(0) 	caso verdadero
* <- Op
709:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* -> Identificador
* -> Identificador
710:     ST  0, 0(6) 	op: push left
711:     LD  1, 0(6) 	op: load left
712:   SUB 0, 1, 0	op == 
713:    JEQ  0, 2(7) 	br if true
714:    LDC  0, 0(0) 	caso falso
715:    LDA  7, 1(7) 	salto incodicional
716:    LDC  0, 1(0) 	caso verdadero
* <- Op
717:     ST  0, 0(6) 	op: push left
* -> Identificador
718:     ST  0, -1(6) 	op: push left
719:     LD  1, -1(6) 	op: load left
720:   SUB 0, 1, 0	op == 
721:    JEQ  0, 2(7) 	br if true
722:    LDC  0, 0(0) 	caso falso
723:    LDA  7, 1(7) 	salto incodicional
724:    LDC  0, 1(0) 	caso verdadero
* <- Op
725:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* -> Identificador
726:     ST  0, 0(6) 	op: push left
727:     LD  1, 0(6) 	op: load left
728:   SUB 0, 1, 0	op == 
729:    JEQ  0, 2(7) 	br if true
730:    LDC  0, 0(0) 	caso falso
731:    LDA  7, 1(7) 	salto incodicional
732:    LDC  0, 1(0) 	caso verdadero
* <- Op
* -> Identificador
733:     ST  0, 0(6) 	op: push left
734:     LD  1, 0(6) 	op: load left
735:   SUB 0, 1, 0	op == 
736:    JEQ  0, 2(7) 	br if true
737:    LDC  0, 0(0) 	caso falso
738:    LDA  7, 1(7) 	salto incodicional
739:    LDC  0, 1(0) 	caso verdadero
* <- Op
* -> Identificador
740:     ST  0, 0(6) 	op: push left
741:     LD  1, 0(6) 	op: load left
742:   SUB 0, 1, 0	op == 
743:    JEQ  0, 2(7) 	br if true
744:    LDC  0, 0(0) 	caso falso
745:    LDA  7, 1(7) 	salto incodicional
746:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
747:    LDC  0, 32(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* -> Identificador
748:     ST  0, 0(6) 	op: push left
749:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
750:    JEQ 0, 1(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* -> Identificador
752:     ST  0, 0(6) 	op: push left
753:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* -> Identificador
755:     ST  0, 0(6) 	op: push left
756:     LD  1, 0(6) 	op: load left
757:   SUB 0, 1, 0	op == 
758:    JEQ  0, 2(7) 	br if true
759:    LDC  0, 0(0) 	caso falso
760:    LDA  7, 1(7) 	salto incodicional
761:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
763:     ST  0, 0(6) 	op: push left
764:     LD  1, 0(6) 	op: load left
765:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
762:    JEQ 0, 4(7) 	si: jmp a sino
* -> Identificador
767:     ST  0, 0(6) 	op: push left
768:     LD  1, 0(6) 	op: load left
769:   SUB 0, 1, 0	op == 
770:    JEQ  0, 2(7) 	br if true
771:    LDC  0, 0(0) 	caso falso
772:    LDA  7, 1(7) 	salto incodicional
773:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
775:     ST  0, 0(6) 	op: push left
776:     LD  1, 0(6) 	op: load left
777:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
774:    JEQ 0, 4(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
779:     ST  0, 0(6) 	op: push left
780:     LD  1, 0(6) 	op: load left
781:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
782:     ST  0, 0(6) 	op: push left
783:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
785:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
784:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
787:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
786:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
788:     ST  0, 0(6) 	op: push left
789:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
790:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
791:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
778:    LDA 7, 13(7) 	jmp al final
* <- if
* -> Identificador
792:     ST  0, 0(6) 	op: push left
793:     LD  1, 0(6) 	op: load left
794:   SUB 0, 1, 0	op == 
795:    JEQ  0, 2(7) 	br if true
796:    LDC  0, 0(0) 	caso falso
797:    LDA  7, 1(7) 	salto incodicional
798:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
799:     ST  0, 0(6) 	op: push left
800:     LD  1, 0(6) 	op: load left
801:   ADD 0, 1, 0	op +
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
802:     ST  0, 0(6) 	op: push left
803:     LD  1, 0(6) 	op: load left
804:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
805:     ST  0, 0(6) 	op: push left
806:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
808:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
807:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
810:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
809:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
811:     ST  0, 0(6) 	op: push left
812:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
813:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
814:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
766:    LDA 7, 48(7) 	jmp al final
* <- if
* -> Identificador
815:     ST  0, 0(6) 	op: push left
816:     LD  1, 0(6) 	op: load left
817:   SUB 0, 1, 0	op == 
818:    JEQ  0, 2(7) 	br if true
819:    LDC  0, 0(0) 	caso falso
820:    LDA  7, 1(7) 	salto incodicional
821:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
822:     ST  0, 0(6) 	op: push left
823:     LD  1, 0(6) 	op: load left
824:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
825:     ST  0, 0(6) 	op: push left
826:     LD  1, 0(6) 	op: load left
827:   SUB 0, 1, 0	op == 
828:    JEQ  0, 2(7) 	br if true
829:    LDC  0, 0(0) 	caso falso
830:    LDA  7, 1(7) 	salto incodicional
831:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
833:     ST  0, 0(6) 	op: push left
834:     LD  1, 0(6) 	op: load left
835:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
832:    JEQ 0, 4(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
837:     ST  0, 0(6) 	op: push left
838:     LD  1, 0(6) 	op: load left
839:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
840:     ST  0, 0(6) 	op: push left
841:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
843:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
842:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
845:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
844:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
846:     ST  0, 0(6) 	op: push left
847:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
848:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
849:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
836:    LDA 7, 13(7) 	jmp al final
* <- if
* -> Identificador
850:     ST  0, 0(6) 	op: push left
851:     LD  1, 0(6) 	op: load left
852:   SUB 0, 1, 0	op == 
853:    JEQ  0, 2(7) 	br if true
854:    LDC  0, 0(0) 	caso falso
855:    LDA  7, 1(7) 	salto incodicional
856:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
857:     ST  0, 0(6) 	op: push left
858:     LD  1, 0(6) 	op: load left
859:   ADD 0, 1, 0	op +
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
860:     ST  0, 0(6) 	op: push left
861:     LD  1, 0(6) 	op: load left
862:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
863:     ST  0, 0(6) 	op: push left
864:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
866:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
865:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
868:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
867:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
869:     ST  0, 0(6) 	op: push left
870:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
871:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
872:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
754:    JEQ 0, 119(7) 	si: jmp a sino
873:    LDA 7, 0(7) 	jmp al final
* <- if
* -> Identificador
874:     ST  0, 0(6) 	op: push left
875:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* -> Identificador
876:     ST  0, 0(6) 	op: push left
877:     LD  1, 0(6) 	op: load left
878:   SUB 0, 1, 0	op == 
879:    JEQ  0, 2(7) 	br if true
880:    LDC  0, 0(0) 	caso falso
881:    LDA  7, 1(7) 	salto incodicional
882:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
884:     ST  0, 0(6) 	op: push left
885:     LD  1, 0(6) 	op: load left
886:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
883:    JEQ 0, 4(7) 	si: jmp a sino
* -> Identificador
888:     ST  0, 0(6) 	op: push left
889:     LD  1, 0(6) 	op: load left
890:   SUB 0, 1, 0	op == 
891:    JEQ  0, 2(7) 	br if true
892:    LDC  0, 0(0) 	caso falso
893:    LDA  7, 1(7) 	salto incodicional
894:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
896:     ST  0, 0(6) 	op: push left
897:     LD  1, 0(6) 	op: load left
898:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
895:    JEQ 0, 4(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
900:     ST  0, 0(6) 	op: push left
901:     LD  1, 0(6) 	op: load left
902:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
903:     ST  0, 0(6) 	op: push left
904:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
906:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
905:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
908:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
907:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
909:     ST  0, 0(6) 	op: push left
910:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
911:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
912:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
899:    LDA 7, 13(7) 	jmp al final
* <- if
* -> Identificador
913:     ST  0, 0(6) 	op: push left
914:     LD  1, 0(6) 	op: load left
915:   SUB 0, 1, 0	op == 
916:    JEQ  0, 2(7) 	br if true
917:    LDC  0, 0(0) 	caso falso
918:    LDA  7, 1(7) 	salto incodicional
919:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
920:     ST  0, 0(6) 	op: push left
921:     LD  1, 0(6) 	op: load left
922:   ADD 0, 1, 0	op +
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
923:     ST  0, 0(6) 	op: push left
924:     LD  1, 0(6) 	op: load left
925:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
926:     ST  0, 0(6) 	op: push left
927:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
929:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
928:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
931:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
930:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
932:     ST  0, 0(6) 	op: push left
933:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
934:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
935:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
887:    LDA 7, 48(7) 	jmp al final
* <- if
* -> Identificador
936:     ST  0, 0(6) 	op: push left
937:     LD  1, 0(6) 	op: load left
938:   SUB 0, 1, 0	op == 
939:    JEQ  0, 2(7) 	br if true
940:    LDC  0, 0(0) 	caso falso
941:    LDA  7, 1(7) 	salto incodicional
942:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
943:     ST  0, 0(6) 	op: push left
944:     LD  1, 0(6) 	op: load left
945:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
946:     ST  0, 0(6) 	op: push left
947:     LD  1, 0(6) 	op: load left
948:   SUB 0, 1, 0	op == 
949:    JEQ  0, 2(7) 	br if true
950:    LDC  0, 0(0) 	caso falso
951:    LDA  7, 1(7) 	salto incodicional
952:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
954:     ST  0, 0(6) 	op: push left
955:     LD  1, 0(6) 	op: load left
956:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
953:    JEQ 0, 4(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
958:     ST  0, 0(6) 	op: push left
959:     LD  1, 0(6) 	op: load left
960:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
961:     ST  0, 0(6) 	op: push left
962:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
964:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
963:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
966:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
965:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
967:     ST  0, 0(6) 	op: push left
968:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
969:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
970:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
957:    LDA 7, 13(7) 	jmp al final
* <- if
* -> Identificador
971:     ST  0, 0(6) 	op: push left
972:     LD  1, 0(6) 	op: load left
973:   SUB 0, 1, 0	op == 
974:    JEQ  0, 2(7) 	br if true
975:    LDC  0, 0(0) 	caso falso
976:    LDA  7, 1(7) 	salto incodicional
977:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
978:     ST  0, 0(6) 	op: push left
979:     LD  1, 0(6) 	op: load left
980:   ADD 0, 1, 0	op +
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
981:     ST  0, 0(6) 	op: push left
982:     LD  1, 0(6) 	op: load left
983:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
984:     ST  0, 0(6) 	op: push left
985:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
987:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
986:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
989:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
988:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
990:     ST  0, 0(6) 	op: push left
991:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
992:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
993:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
751:    LDA 7, 242(7) 	jmp al final
* <- if
* -> Identificador
994:     ST  0, 0(6) 	op: push left
995:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* -> Identificador
996:     ST  0, 0(6) 	op: push left
997:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* -> Identificador
999:     ST  0, 0(6) 	op: push left
1000:     LD  1, 0(6) 	op: load left
1001:   SUB 0, 1, 0	op == 
1002:    JEQ  0, 2(7) 	br if true
1003:    LDC  0, 0(0) 	caso falso
1004:    LDA  7, 1(7) 	salto incodicional
1005:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1007:     ST  0, 0(6) 	op: push left
1008:     LD  1, 0(6) 	op: load left
1009:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
1006:    JEQ 0, 4(7) 	si: jmp a sino
* -> Identificador
1011:     ST  0, 0(6) 	op: push left
1012:     LD  1, 0(6) 	op: load left
1013:   SUB 0, 1, 0	op == 
1014:    JEQ  0, 2(7) 	br if true
1015:    LDC  0, 0(0) 	caso falso
1016:    LDA  7, 1(7) 	salto incodicional
1017:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1019:     ST  0, 0(6) 	op: push left
1020:     LD  1, 0(6) 	op: load left
1021:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
1018:    JEQ 0, 4(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1023:     ST  0, 0(6) 	op: push left
1024:     LD  1, 0(6) 	op: load left
1025:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
1026:     ST  0, 0(6) 	op: push left
1027:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1029:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
1028:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1031:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1030:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
1032:     ST  0, 0(6) 	op: push left
1033:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1034:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1035:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1022:    LDA 7, 13(7) 	jmp al final
* <- if
* -> Identificador
1036:     ST  0, 0(6) 	op: push left
1037:     LD  1, 0(6) 	op: load left
1038:   SUB 0, 1, 0	op == 
1039:    JEQ  0, 2(7) 	br if true
1040:    LDC  0, 0(0) 	caso falso
1041:    LDA  7, 1(7) 	salto incodicional
1042:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1043:     ST  0, 0(6) 	op: push left
1044:     LD  1, 0(6) 	op: load left
1045:   ADD 0, 1, 0	op +
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1046:     ST  0, 0(6) 	op: push left
1047:     LD  1, 0(6) 	op: load left
1048:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
1049:     ST  0, 0(6) 	op: push left
1050:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1052:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
1051:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1054:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1053:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
1055:     ST  0, 0(6) 	op: push left
1056:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1057:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1058:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1010:    LDA 7, 48(7) 	jmp al final
* <- if
* -> Identificador
1059:     ST  0, 0(6) 	op: push left
1060:     LD  1, 0(6) 	op: load left
1061:   SUB 0, 1, 0	op == 
1062:    JEQ  0, 2(7) 	br if true
1063:    LDC  0, 0(0) 	caso falso
1064:    LDA  7, 1(7) 	salto incodicional
1065:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1066:     ST  0, 0(6) 	op: push left
1067:     LD  1, 0(6) 	op: load left
1068:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
1069:     ST  0, 0(6) 	op: push left
1070:     LD  1, 0(6) 	op: load left
1071:   SUB 0, 1, 0	op == 
1072:    JEQ  0, 2(7) 	br if true
1073:    LDC  0, 0(0) 	caso falso
1074:    LDA  7, 1(7) 	salto incodicional
1075:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1077:     ST  0, 0(6) 	op: push left
1078:     LD  1, 0(6) 	op: load left
1079:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
1076:    JEQ 0, 4(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1081:     ST  0, 0(6) 	op: push left
1082:     LD  1, 0(6) 	op: load left
1083:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
1084:     ST  0, 0(6) 	op: push left
1085:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1087:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
1086:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1089:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1088:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
1090:     ST  0, 0(6) 	op: push left
1091:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1092:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1093:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1080:    LDA 7, 13(7) 	jmp al final
* <- if
* -> Identificador
1094:     ST  0, 0(6) 	op: push left
1095:     LD  1, 0(6) 	op: load left
1096:   SUB 0, 1, 0	op == 
1097:    JEQ  0, 2(7) 	br if true
1098:    LDC  0, 0(0) 	caso falso
1099:    LDA  7, 1(7) 	salto incodicional
1100:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1101:     ST  0, 0(6) 	op: push left
1102:     LD  1, 0(6) 	op: load left
1103:   ADD 0, 1, 0	op +
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1104:     ST  0, 0(6) 	op: push left
1105:     LD  1, 0(6) 	op: load left
1106:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
1107:     ST  0, 0(6) 	op: push left
1108:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1110:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
1109:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1112:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1111:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
1113:     ST  0, 0(6) 	op: push left
1114:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1115:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1116:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
998:    JEQ 0, 119(7) 	si: jmp a sino
1117:    LDA 7, 0(7) 	jmp al final
* <- if
* -> Identificador
1118:     ST  0, 0(6) 	op: push left
1119:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* -> Identificador
1120:     ST  0, 0(6) 	op: push left
1121:     LD  1, 0(6) 	op: load left
1122:   SUB 0, 1, 0	op == 
1123:    JEQ  0, 2(7) 	br if true
1124:    LDC  0, 0(0) 	caso falso
1125:    LDA  7, 1(7) 	salto incodicional
1126:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1128:     ST  0, 0(6) 	op: push left
1129:     LD  1, 0(6) 	op: load left
1130:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
1127:    JEQ 0, 4(7) 	si: jmp a sino
* -> Identificador
1132:     ST  0, 0(6) 	op: push left
1133:     LD  1, 0(6) 	op: load left
1134:   SUB 0, 1, 0	op == 
1135:    JEQ  0, 2(7) 	br if true
1136:    LDC  0, 0(0) 	caso falso
1137:    LDA  7, 1(7) 	salto incodicional
1138:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1140:     ST  0, 0(6) 	op: push left
1141:     LD  1, 0(6) 	op: load left
1142:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
1139:    JEQ 0, 4(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1144:     ST  0, 0(6) 	op: push left
1145:     LD  1, 0(6) 	op: load left
1146:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
1147:     ST  0, 0(6) 	op: push left
1148:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1150:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
1149:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1152:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1151:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
1153:     ST  0, 0(6) 	op: push left
1154:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1155:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1156:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1143:    LDA 7, 13(7) 	jmp al final
* <- if
* -> Identificador
1157:     ST  0, 0(6) 	op: push left
1158:     LD  1, 0(6) 	op: load left
1159:   SUB 0, 1, 0	op == 
1160:    JEQ  0, 2(7) 	br if true
1161:    LDC  0, 0(0) 	caso falso
1162:    LDA  7, 1(7) 	salto incodicional
1163:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1164:     ST  0, 0(6) 	op: push left
1165:     LD  1, 0(6) 	op: load left
1166:   ADD 0, 1, 0	op +
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1167:     ST  0, 0(6) 	op: push left
1168:     LD  1, 0(6) 	op: load left
1169:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
1170:     ST  0, 0(6) 	op: push left
1171:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1173:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
1172:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1175:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1174:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
1176:     ST  0, 0(6) 	op: push left
1177:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1178:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1179:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1131:    LDA 7, 48(7) 	jmp al final
* <- if
* -> Identificador
1180:     ST  0, 0(6) 	op: push left
1181:     LD  1, 0(6) 	op: load left
1182:   SUB 0, 1, 0	op == 
1183:    JEQ  0, 2(7) 	br if true
1184:    LDC  0, 0(0) 	caso falso
1185:    LDA  7, 1(7) 	salto incodicional
1186:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1187:     ST  0, 0(6) 	op: push left
1188:     LD  1, 0(6) 	op: load left
1189:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
1190:     ST  0, 0(6) 	op: push left
1191:     LD  1, 0(6) 	op: load left
1192:   SUB 0, 1, 0	op == 
1193:    JEQ  0, 2(7) 	br if true
1194:    LDC  0, 0(0) 	caso falso
1195:    LDA  7, 1(7) 	salto incodicional
1196:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1198:     ST  0, 0(6) 	op: push left
1199:     LD  1, 0(6) 	op: load left
1200:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
1197:    JEQ 0, 4(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1202:     ST  0, 0(6) 	op: push left
1203:     LD  1, 0(6) 	op: load left
1204:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
1205:     ST  0, 0(6) 	op: push left
1206:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1208:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
1207:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1210:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1209:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
1211:     ST  0, 0(6) 	op: push left
1212:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1213:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1214:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1201:    LDA 7, 13(7) 	jmp al final
* <- if
* -> Identificador
1215:     ST  0, 0(6) 	op: push left
1216:     LD  1, 0(6) 	op: load left
1217:   SUB 0, 1, 0	op == 
1218:    JEQ  0, 2(7) 	br if true
1219:    LDC  0, 0(0) 	caso falso
1220:    LDA  7, 1(7) 	salto incodicional
1221:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1222:     ST  0, 0(6) 	op: push left
1223:     LD  1, 0(6) 	op: load left
1224:   ADD 0, 1, 0	op +
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1225:     ST  0, 0(6) 	op: push left
1226:     LD  1, 0(6) 	op: load left
1227:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
1228:     ST  0, 0(6) 	op: push left
1229:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1231:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
1230:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1233:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1232:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
1234:     ST  0, 0(6) 	op: push left
1235:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1236:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1237:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* -> Identificador
1238:     ST  0, 0(6) 	op: push left
1239:     LD  1, 0(6) 	op: load left
1240:   SUB 0, 1, 0	op == 
1241:    JEQ  0, 2(7) 	br if true
1242:    LDC  0, 0(0) 	caso falso
1243:    LDA  7, 1(7) 	salto incodicional
1244:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SELECCIONAR (null)
* * TIPOARBOL_CASO_SENTENCIA (null)
* -> Constante
1246:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_CASO_SENTENCIA (null)
* -> Constante
1247:    LDC  0, 2(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_CASO_SENTENCIA (null)
* -> Constante
1248:    LDC  0, 3(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_ALCONTRARIO (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
1245:    JEQ 0, 4(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1249:    LDA 7, 0(7) 	jmp al final
* <- if
* -> Identificador
1250:     ST  0, 0(6) 	op: push left
1251:     LD  1, 0(6) 	op: load left
1252:   SUB 0, 1, 0	op == 
1253:    JEQ  0, 2(7) 	br if true
1254:    LDC  0, 0(0) 	caso falso
1255:    LDA  7, 1(7) 	salto incodicional
1256:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SELECCIONAR (null)
* * TIPOARBOL_CASO_SENTENCIA (null)
* -> Constante
1257:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_CASO_SENTENCIA (null)
* -> Constante
1258:    LDC  0, 2(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_CASO_SENTENCIA (null)
* -> Constante
1259:    LDC  0, 3(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_ALCONTRARIO (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
 79:    LDA 7, 1180(7) 	jmp al final
* <- if
* -> Identificador
* -> Identificador
* -> Identificador
1260:     ST  0, 0(6) 	op: push left
1261:     LD  1, 0(6) 	op: load left
1262:   SUB 0, 1, 0	op == 
1263:    JEQ  0, 2(7) 	br if true
1264:    LDC  0, 0(0) 	caso falso
1265:    LDA  7, 1(7) 	salto incodicional
1266:    LDC  0, 1(0) 	caso verdadero
* <- Op
1267:     ST  0, 0(6) 	op: push left
* -> Identificador
1268:     ST  0, -1(6) 	op: push left
1269:     LD  1, -1(6) 	op: load left
1270:   SUB 0, 1, 0	op == 
1271:    JEQ  0, 2(7) 	br if true
1272:    LDC  0, 0(0) 	caso falso
1273:    LDA  7, 1(7) 	salto incodicional
1274:    LDC  0, 1(0) 	caso verdadero
* <- Op
1275:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* -> Identificador
1276:     ST  0, 0(6) 	op: push left
1277:     LD  1, 0(6) 	op: load left
1278:   SUB 0, 1, 0	op == 
1279:    JEQ  0, 2(7) 	br if true
1280:    LDC  0, 0(0) 	caso falso
1281:    LDA  7, 1(7) 	salto incodicional
1282:    LDC  0, 1(0) 	caso verdadero
* <- Op
* -> Identificador
1283:     ST  0, 0(6) 	op: push left
1284:     LD  1, 0(6) 	op: load left
1285:   SUB 0, 1, 0	op == 
1286:    JEQ  0, 2(7) 	br if true
1287:    LDC  0, 0(0) 	caso falso
1288:    LDA  7, 1(7) 	salto incodicional
1289:    LDC  0, 1(0) 	caso verdadero
* <- Op
1290:     ST  0, 0(6) 	op: push left
* -> Identificador
1291:     ST  0, -1(6) 	op: push left
1292:     LD  1, -1(6) 	op: load left
1293:   SUB 0, 1, 0	op == 
1294:    JEQ  0, 2(7) 	br if true
1295:    LDC  0, 0(0) 	caso falso
1296:    LDA  7, 1(7) 	salto incodicional
1297:    LDC  0, 1(0) 	caso verdadero
* <- Op
1298:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* -> Identificador
* -> Identificador
1299:     ST  0, 0(6) 	op: push left
1300:     LD  1, 0(6) 	op: load left
1301:   SUB 0, 1, 0	op == 
1302:    JEQ  0, 2(7) 	br if true
1303:    LDC  0, 0(0) 	caso falso
1304:    LDA  7, 1(7) 	salto incodicional
1305:    LDC  0, 1(0) 	caso verdadero
* <- Op
1306:     ST  0, 0(6) 	op: push left
* -> Identificador
1307:     ST  0, -1(6) 	op: push left
1308:     LD  1, -1(6) 	op: load left
1309:   SUB 0, 1, 0	op == 
1310:    JEQ  0, 2(7) 	br if true
1311:    LDC  0, 0(0) 	caso falso
1312:    LDA  7, 1(7) 	salto incodicional
1313:    LDC  0, 1(0) 	caso verdadero
* <- Op
1314:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* -> Identificador
1315:     ST  0, 0(6) 	op: push left
1316:     LD  1, 0(6) 	op: load left
1317:   SUB 0, 1, 0	op == 
1318:    JEQ  0, 2(7) 	br if true
1319:    LDC  0, 0(0) 	caso falso
1320:    LDA  7, 1(7) 	salto incodicional
1321:    LDC  0, 1(0) 	caso verdadero
* <- Op
* -> Identificador
1322:     ST  0, 0(6) 	op: push left
1323:     LD  1, 0(6) 	op: load left
1324:   SUB 0, 1, 0	op == 
1325:    JEQ  0, 2(7) 	br if true
1326:    LDC  0, 0(0) 	caso falso
1327:    LDA  7, 1(7) 	salto incodicional
1328:    LDC  0, 1(0) 	caso verdadero
* <- Op
* -> Identificador
1329:     ST  0, 0(6) 	op: push left
1330:     LD  1, 0(6) 	op: load left
1331:   SUB 0, 1, 0	op == 
1332:    JEQ  0, 2(7) 	br if true
1333:    LDC  0, 0(0) 	caso falso
1334:    LDA  7, 1(7) 	salto incodicional
1335:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
* -> Identificador
* -> Identificador
1336:     ST  0, 0(6) 	op: push left
1337:     LD  1, 0(6) 	op: load left
1338:   SUB 0, 1, 0	op == 
1339:    JEQ  0, 2(7) 	br if true
1340:    LDC  0, 0(0) 	caso falso
1341:    LDA  7, 1(7) 	salto incodicional
1342:    LDC  0, 1(0) 	caso verdadero
* <- Op
1343:     ST  0, 0(6) 	op: push left
* -> Identificador
1344:     ST  0, -1(6) 	op: push left
1345:     LD  1, -1(6) 	op: load left
1346:   SUB 0, 1, 0	op == 
1347:    JEQ  0, 2(7) 	br if true
1348:    LDC  0, 0(0) 	caso falso
1349:    LDA  7, 1(7) 	salto incodicional
1350:    LDC  0, 1(0) 	caso verdadero
* <- Op
1351:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* -> Identificador
1352:     ST  0, 0(6) 	op: push left
1353:     LD  1, 0(6) 	op: load left
1354:   SUB 0, 1, 0	op == 
1355:    JEQ  0, 2(7) 	br if true
1356:    LDC  0, 0(0) 	caso falso
1357:    LDA  7, 1(7) 	salto incodicional
1358:    LDC  0, 1(0) 	caso verdadero
* <- Op
* -> Identificador
1359:     ST  0, 0(6) 	op: push left
1360:     LD  1, 0(6) 	op: load left
1361:   SUB 0, 1, 0	op == 
1362:    JEQ  0, 2(7) 	br if true
1363:    LDC  0, 0(0) 	caso falso
1364:    LDA  7, 1(7) 	salto incodicional
1365:    LDC  0, 1(0) 	caso verdadero
* <- Op
1366:     ST  0, 0(6) 	op: push left
* -> Identificador
1367:     ST  0, -1(6) 	op: push left
1368:     LD  1, -1(6) 	op: load left
1369:   SUB 0, 1, 0	op == 
1370:    JEQ  0, 2(7) 	br if true
1371:    LDC  0, 0(0) 	caso falso
1372:    LDA  7, 1(7) 	salto incodicional
1373:    LDC  0, 1(0) 	caso verdadero
* <- Op
1374:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* -> Identificador
* -> Identificador
1375:     ST  0, 0(6) 	op: push left
1376:     LD  1, 0(6) 	op: load left
1377:   SUB 0, 1, 0	op == 
1378:    JEQ  0, 2(7) 	br if true
1379:    LDC  0, 0(0) 	caso falso
1380:    LDA  7, 1(7) 	salto incodicional
1381:    LDC  0, 1(0) 	caso verdadero
* <- Op
1382:     ST  0, 0(6) 	op: push left
* -> Identificador
1383:     ST  0, -1(6) 	op: push left
1384:     LD  1, -1(6) 	op: load left
1385:   SUB 0, 1, 0	op == 
1386:    JEQ  0, 2(7) 	br if true
1387:    LDC  0, 0(0) 	caso falso
1388:    LDA  7, 1(7) 	salto incodicional
1389:    LDC  0, 1(0) 	caso verdadero
* <- Op
1390:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* -> Identificador
1391:     ST  0, 0(6) 	op: push left
1392:     LD  1, 0(6) 	op: load left
1393:   SUB 0, 1, 0	op == 
1394:    JEQ  0, 2(7) 	br if true
1395:    LDC  0, 0(0) 	caso falso
1396:    LDA  7, 1(7) 	salto incodicional
1397:    LDC  0, 1(0) 	caso verdadero
* <- Op
* -> Identificador
1398:     ST  0, 0(6) 	op: push left
1399:     LD  1, 0(6) 	op: load left
1400:   SUB 0, 1, 0	op == 
1401:    JEQ  0, 2(7) 	br if true
1402:    LDC  0, 0(0) 	caso falso
1403:    LDA  7, 1(7) 	salto incodicional
1404:    LDC  0, 1(0) 	caso verdadero
* <- Op
* -> Identificador
1405:     ST  0, 0(6) 	op: push left
1406:     LD  1, 0(6) 	op: load left
1407:   SUB 0, 1, 0	op == 
1408:    JEQ  0, 2(7) 	br if true
1409:    LDC  0, 0(0) 	caso falso
1410:    LDA  7, 1(7) 	salto incodicional
1411:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1413:    LDC  0, 32(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
1412:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* -> Identificador
1415:     ST  0, 0(6) 	op: push left
1416:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
1417:    JEQ 0, 1(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* -> Identificador
1419:     ST  0, 0(6) 	op: push left
1420:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* -> Identificador
1422:     ST  0, 0(6) 	op: push left
1423:     LD  1, 0(6) 	op: load left
1424:   SUB 0, 1, 0	op == 
1425:    JEQ  0, 2(7) 	br if true
1426:    LDC  0, 0(0) 	caso falso
1427:    LDA  7, 1(7) 	salto incodicional
1428:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1430:     ST  0, 0(6) 	op: push left
1431:     LD  1, 0(6) 	op: load left
1432:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
1429:    JEQ 0, 4(7) 	si: jmp a sino
* -> Identificador
1434:     ST  0, 0(6) 	op: push left
1435:     LD  1, 0(6) 	op: load left
1436:   SUB 0, 1, 0	op == 
1437:    JEQ  0, 2(7) 	br if true
1438:    LDC  0, 0(0) 	caso falso
1439:    LDA  7, 1(7) 	salto incodicional
1440:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1442:     ST  0, 0(6) 	op: push left
1443:     LD  1, 0(6) 	op: load left
1444:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
1441:    JEQ 0, 4(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1446:     ST  0, 0(6) 	op: push left
1447:     LD  1, 0(6) 	op: load left
1448:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
1449:     ST  0, 0(6) 	op: push left
1450:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1452:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
1451:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1454:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1453:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
1455:     ST  0, 0(6) 	op: push left
1456:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1457:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1458:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1445:    LDA 7, 13(7) 	jmp al final
* <- if
* -> Identificador
1459:     ST  0, 0(6) 	op: push left
1460:     LD  1, 0(6) 	op: load left
1461:   SUB 0, 1, 0	op == 
1462:    JEQ  0, 2(7) 	br if true
1463:    LDC  0, 0(0) 	caso falso
1464:    LDA  7, 1(7) 	salto incodicional
1465:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1466:     ST  0, 0(6) 	op: push left
1467:     LD  1, 0(6) 	op: load left
1468:   ADD 0, 1, 0	op +
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1469:     ST  0, 0(6) 	op: push left
1470:     LD  1, 0(6) 	op: load left
1471:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
1472:     ST  0, 0(6) 	op: push left
1473:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1475:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
1474:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1477:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1476:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
1478:     ST  0, 0(6) 	op: push left
1479:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1480:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1481:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1433:    LDA 7, 48(7) 	jmp al final
* <- if
* -> Identificador
1482:     ST  0, 0(6) 	op: push left
1483:     LD  1, 0(6) 	op: load left
1484:   SUB 0, 1, 0	op == 
1485:    JEQ  0, 2(7) 	br if true
1486:    LDC  0, 0(0) 	caso falso
1487:    LDA  7, 1(7) 	salto incodicional
1488:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1489:     ST  0, 0(6) 	op: push left
1490:     LD  1, 0(6) 	op: load left
1491:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
1492:     ST  0, 0(6) 	op: push left
1493:     LD  1, 0(6) 	op: load left
1494:   SUB 0, 1, 0	op == 
1495:    JEQ  0, 2(7) 	br if true
1496:    LDC  0, 0(0) 	caso falso
1497:    LDA  7, 1(7) 	salto incodicional
1498:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1500:     ST  0, 0(6) 	op: push left
1501:     LD  1, 0(6) 	op: load left
1502:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
1499:    JEQ 0, 4(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1504:     ST  0, 0(6) 	op: push left
1505:     LD  1, 0(6) 	op: load left
1506:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
1507:     ST  0, 0(6) 	op: push left
1508:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1510:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
1509:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1512:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1511:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
1513:     ST  0, 0(6) 	op: push left
1514:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1515:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1516:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1503:    LDA 7, 13(7) 	jmp al final
* <- if
* -> Identificador
1517:     ST  0, 0(6) 	op: push left
1518:     LD  1, 0(6) 	op: load left
1519:   SUB 0, 1, 0	op == 
1520:    JEQ  0, 2(7) 	br if true
1521:    LDC  0, 0(0) 	caso falso
1522:    LDA  7, 1(7) 	salto incodicional
1523:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1524:     ST  0, 0(6) 	op: push left
1525:     LD  1, 0(6) 	op: load left
1526:   ADD 0, 1, 0	op +
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1527:     ST  0, 0(6) 	op: push left
1528:     LD  1, 0(6) 	op: load left
1529:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
1530:     ST  0, 0(6) 	op: push left
1531:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1533:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
1532:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1535:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1534:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
1536:     ST  0, 0(6) 	op: push left
1537:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1538:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1539:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
1421:    JEQ 0, 119(7) 	si: jmp a sino
1540:    LDA 7, 0(7) 	jmp al final
* <- if
* -> Identificador
1541:     ST  0, 0(6) 	op: push left
1542:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* -> Identificador
1543:     ST  0, 0(6) 	op: push left
1544:     LD  1, 0(6) 	op: load left
1545:   SUB 0, 1, 0	op == 
1546:    JEQ  0, 2(7) 	br if true
1547:    LDC  0, 0(0) 	caso falso
1548:    LDA  7, 1(7) 	salto incodicional
1549:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1551:     ST  0, 0(6) 	op: push left
1552:     LD  1, 0(6) 	op: load left
1553:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
1550:    JEQ 0, 4(7) 	si: jmp a sino
* -> Identificador
1555:     ST  0, 0(6) 	op: push left
1556:     LD  1, 0(6) 	op: load left
1557:   SUB 0, 1, 0	op == 
1558:    JEQ  0, 2(7) 	br if true
1559:    LDC  0, 0(0) 	caso falso
1560:    LDA  7, 1(7) 	salto incodicional
1561:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1563:     ST  0, 0(6) 	op: push left
1564:     LD  1, 0(6) 	op: load left
1565:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
1562:    JEQ 0, 4(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1567:     ST  0, 0(6) 	op: push left
1568:     LD  1, 0(6) 	op: load left
1569:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
1570:     ST  0, 0(6) 	op: push left
1571:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1573:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
1572:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1575:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1574:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
1576:     ST  0, 0(6) 	op: push left
1577:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1578:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1579:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1566:    LDA 7, 13(7) 	jmp al final
* <- if
* -> Identificador
1580:     ST  0, 0(6) 	op: push left
1581:     LD  1, 0(6) 	op: load left
1582:   SUB 0, 1, 0	op == 
1583:    JEQ  0, 2(7) 	br if true
1584:    LDC  0, 0(0) 	caso falso
1585:    LDA  7, 1(7) 	salto incodicional
1586:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1587:     ST  0, 0(6) 	op: push left
1588:     LD  1, 0(6) 	op: load left
1589:   ADD 0, 1, 0	op +
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1590:     ST  0, 0(6) 	op: push left
1591:     LD  1, 0(6) 	op: load left
1592:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
1593:     ST  0, 0(6) 	op: push left
1594:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1596:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
1595:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1598:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1597:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
1599:     ST  0, 0(6) 	op: push left
1600:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1601:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1602:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1554:    LDA 7, 48(7) 	jmp al final
* <- if
* -> Identificador
1603:     ST  0, 0(6) 	op: push left
1604:     LD  1, 0(6) 	op: load left
1605:   SUB 0, 1, 0	op == 
1606:    JEQ  0, 2(7) 	br if true
1607:    LDC  0, 0(0) 	caso falso
1608:    LDA  7, 1(7) 	salto incodicional
1609:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1610:     ST  0, 0(6) 	op: push left
1611:     LD  1, 0(6) 	op: load left
1612:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
1613:     ST  0, 0(6) 	op: push left
1614:     LD  1, 0(6) 	op: load left
1615:   SUB 0, 1, 0	op == 
1616:    JEQ  0, 2(7) 	br if true
1617:    LDC  0, 0(0) 	caso falso
1618:    LDA  7, 1(7) 	salto incodicional
1619:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1621:     ST  0, 0(6) 	op: push left
1622:     LD  1, 0(6) 	op: load left
1623:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
1620:    JEQ 0, 4(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1625:     ST  0, 0(6) 	op: push left
1626:     LD  1, 0(6) 	op: load left
1627:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
1628:     ST  0, 0(6) 	op: push left
1629:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1631:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
1630:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1633:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1632:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
1634:     ST  0, 0(6) 	op: push left
1635:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1636:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1637:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1624:    LDA 7, 13(7) 	jmp al final
* <- if
* -> Identificador
1638:     ST  0, 0(6) 	op: push left
1639:     LD  1, 0(6) 	op: load left
1640:   SUB 0, 1, 0	op == 
1641:    JEQ  0, 2(7) 	br if true
1642:    LDC  0, 0(0) 	caso falso
1643:    LDA  7, 1(7) 	salto incodicional
1644:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1645:     ST  0, 0(6) 	op: push left
1646:     LD  1, 0(6) 	op: load left
1647:   ADD 0, 1, 0	op +
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1648:     ST  0, 0(6) 	op: push left
1649:     LD  1, 0(6) 	op: load left
1650:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
1651:     ST  0, 0(6) 	op: push left
1652:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1654:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
1653:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1656:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1655:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
1657:     ST  0, 0(6) 	op: push left
1658:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1659:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1660:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1418:    LDA 7, 242(7) 	jmp al final
* <- if
* -> Identificador
1661:     ST  0, 0(6) 	op: push left
1662:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* -> Identificador
1663:     ST  0, 0(6) 	op: push left
1664:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* -> Identificador
1666:     ST  0, 0(6) 	op: push left
1667:     LD  1, 0(6) 	op: load left
1668:   SUB 0, 1, 0	op == 
1669:    JEQ  0, 2(7) 	br if true
1670:    LDC  0, 0(0) 	caso falso
1671:    LDA  7, 1(7) 	salto incodicional
1672:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1674:     ST  0, 0(6) 	op: push left
1675:     LD  1, 0(6) 	op: load left
1676:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
1673:    JEQ 0, 4(7) 	si: jmp a sino
* -> Identificador
1678:     ST  0, 0(6) 	op: push left
1679:     LD  1, 0(6) 	op: load left
1680:   SUB 0, 1, 0	op == 
1681:    JEQ  0, 2(7) 	br if true
1682:    LDC  0, 0(0) 	caso falso
1683:    LDA  7, 1(7) 	salto incodicional
1684:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1686:     ST  0, 0(6) 	op: push left
1687:     LD  1, 0(6) 	op: load left
1688:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
1685:    JEQ 0, 4(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1690:     ST  0, 0(6) 	op: push left
1691:     LD  1, 0(6) 	op: load left
1692:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
1693:     ST  0, 0(6) 	op: push left
1694:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1696:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
1695:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1698:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1697:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
1699:     ST  0, 0(6) 	op: push left
1700:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1701:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1702:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1689:    LDA 7, 13(7) 	jmp al final
* <- if
* -> Identificador
1703:     ST  0, 0(6) 	op: push left
1704:     LD  1, 0(6) 	op: load left
1705:   SUB 0, 1, 0	op == 
1706:    JEQ  0, 2(7) 	br if true
1707:    LDC  0, 0(0) 	caso falso
1708:    LDA  7, 1(7) 	salto incodicional
1709:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1710:     ST  0, 0(6) 	op: push left
1711:     LD  1, 0(6) 	op: load left
1712:   ADD 0, 1, 0	op +
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1713:     ST  0, 0(6) 	op: push left
1714:     LD  1, 0(6) 	op: load left
1715:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
1716:     ST  0, 0(6) 	op: push left
1717:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1719:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
1718:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1721:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1720:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
1722:     ST  0, 0(6) 	op: push left
1723:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1724:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1725:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1677:    LDA 7, 48(7) 	jmp al final
* <- if
* -> Identificador
1726:     ST  0, 0(6) 	op: push left
1727:     LD  1, 0(6) 	op: load left
1728:   SUB 0, 1, 0	op == 
1729:    JEQ  0, 2(7) 	br if true
1730:    LDC  0, 0(0) 	caso falso
1731:    LDA  7, 1(7) 	salto incodicional
1732:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1733:     ST  0, 0(6) 	op: push left
1734:     LD  1, 0(6) 	op: load left
1735:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
1736:     ST  0, 0(6) 	op: push left
1737:     LD  1, 0(6) 	op: load left
1738:   SUB 0, 1, 0	op == 
1739:    JEQ  0, 2(7) 	br if true
1740:    LDC  0, 0(0) 	caso falso
1741:    LDA  7, 1(7) 	salto incodicional
1742:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1744:     ST  0, 0(6) 	op: push left
1745:     LD  1, 0(6) 	op: load left
1746:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
1743:    JEQ 0, 4(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1748:     ST  0, 0(6) 	op: push left
1749:     LD  1, 0(6) 	op: load left
1750:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
1751:     ST  0, 0(6) 	op: push left
1752:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1754:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
1753:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1756:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1755:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
1757:     ST  0, 0(6) 	op: push left
1758:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1759:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1760:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1747:    LDA 7, 13(7) 	jmp al final
* <- if
* -> Identificador
1761:     ST  0, 0(6) 	op: push left
1762:     LD  1, 0(6) 	op: load left
1763:   SUB 0, 1, 0	op == 
1764:    JEQ  0, 2(7) 	br if true
1765:    LDC  0, 0(0) 	caso falso
1766:    LDA  7, 1(7) 	salto incodicional
1767:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1768:     ST  0, 0(6) 	op: push left
1769:     LD  1, 0(6) 	op: load left
1770:   ADD 0, 1, 0	op +
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1771:     ST  0, 0(6) 	op: push left
1772:     LD  1, 0(6) 	op: load left
1773:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
1774:     ST  0, 0(6) 	op: push left
1775:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1777:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
1776:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1779:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1778:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
1780:     ST  0, 0(6) 	op: push left
1781:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1782:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1783:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
1665:    JEQ 0, 119(7) 	si: jmp a sino
1784:    LDA 7, 0(7) 	jmp al final
* <- if
* -> Identificador
1785:     ST  0, 0(6) 	op: push left
1786:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* -> Identificador
1787:     ST  0, 0(6) 	op: push left
1788:     LD  1, 0(6) 	op: load left
1789:   SUB 0, 1, 0	op == 
1790:    JEQ  0, 2(7) 	br if true
1791:    LDC  0, 0(0) 	caso falso
1792:    LDA  7, 1(7) 	salto incodicional
1793:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1795:     ST  0, 0(6) 	op: push left
1796:     LD  1, 0(6) 	op: load left
1797:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
1794:    JEQ 0, 4(7) 	si: jmp a sino
* -> Identificador
1799:     ST  0, 0(6) 	op: push left
1800:     LD  1, 0(6) 	op: load left
1801:   SUB 0, 1, 0	op == 
1802:    JEQ  0, 2(7) 	br if true
1803:    LDC  0, 0(0) 	caso falso
1804:    LDA  7, 1(7) 	salto incodicional
1805:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1807:     ST  0, 0(6) 	op: push left
1808:     LD  1, 0(6) 	op: load left
1809:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
1806:    JEQ 0, 4(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1811:     ST  0, 0(6) 	op: push left
1812:     LD  1, 0(6) 	op: load left
1813:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
1814:     ST  0, 0(6) 	op: push left
1815:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1817:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
1816:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1819:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1818:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
1820:     ST  0, 0(6) 	op: push left
1821:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1822:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1823:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1810:    LDA 7, 13(7) 	jmp al final
* <- if
* -> Identificador
1824:     ST  0, 0(6) 	op: push left
1825:     LD  1, 0(6) 	op: load left
1826:   SUB 0, 1, 0	op == 
1827:    JEQ  0, 2(7) 	br if true
1828:    LDC  0, 0(0) 	caso falso
1829:    LDA  7, 1(7) 	salto incodicional
1830:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1831:     ST  0, 0(6) 	op: push left
1832:     LD  1, 0(6) 	op: load left
1833:   ADD 0, 1, 0	op +
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1834:     ST  0, 0(6) 	op: push left
1835:     LD  1, 0(6) 	op: load left
1836:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
1837:     ST  0, 0(6) 	op: push left
1838:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1840:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
1839:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1842:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1841:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
1843:     ST  0, 0(6) 	op: push left
1844:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1845:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1846:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1798:    LDA 7, 48(7) 	jmp al final
* <- if
* -> Identificador
1847:     ST  0, 0(6) 	op: push left
1848:     LD  1, 0(6) 	op: load left
1849:   SUB 0, 1, 0	op == 
1850:    JEQ  0, 2(7) 	br if true
1851:    LDC  0, 0(0) 	caso falso
1852:    LDA  7, 1(7) 	salto incodicional
1853:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1854:     ST  0, 0(6) 	op: push left
1855:     LD  1, 0(6) 	op: load left
1856:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
1857:     ST  0, 0(6) 	op: push left
1858:     LD  1, 0(6) 	op: load left
1859:   SUB 0, 1, 0	op == 
1860:    JEQ  0, 2(7) 	br if true
1861:    LDC  0, 0(0) 	caso falso
1862:    LDA  7, 1(7) 	salto incodicional
1863:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1865:     ST  0, 0(6) 	op: push left
1866:     LD  1, 0(6) 	op: load left
1867:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
1864:    JEQ 0, 4(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1869:     ST  0, 0(6) 	op: push left
1870:     LD  1, 0(6) 	op: load left
1871:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
1872:     ST  0, 0(6) 	op: push left
1873:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1875:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
1874:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1877:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1876:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
1878:     ST  0, 0(6) 	op: push left
1879:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1880:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1881:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1868:    LDA 7, 13(7) 	jmp al final
* <- if
* -> Identificador
1882:     ST  0, 0(6) 	op: push left
1883:     LD  1, 0(6) 	op: load left
1884:   SUB 0, 1, 0	op == 
1885:    JEQ  0, 2(7) 	br if true
1886:    LDC  0, 0(0) 	caso falso
1887:    LDA  7, 1(7) 	salto incodicional
1888:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1889:     ST  0, 0(6) 	op: push left
1890:     LD  1, 0(6) 	op: load left
1891:   ADD 0, 1, 0	op +
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
1892:     ST  0, 0(6) 	op: push left
1893:     LD  1, 0(6) 	op: load left
1894:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
1895:     ST  0, 0(6) 	op: push left
1896:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1898:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
1897:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1900:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1899:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
1901:     ST  0, 0(6) 	op: push left
1902:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1903:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
1904:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* -> Identificador
1905:     ST  0, 0(6) 	op: push left
1906:     LD  1, 0(6) 	op: load left
1907:   SUB 0, 1, 0	op == 
1908:    JEQ  0, 2(7) 	br if true
1909:    LDC  0, 0(0) 	caso falso
1910:    LDA  7, 1(7) 	salto incodicional
1911:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SELECCIONAR (null)
* * TIPOARBOL_CASO_SENTENCIA (null)
* -> Constante
1913:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_CASO_SENTENCIA (null)
* -> Constante
1914:    LDC  0, 2(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_CASO_SENTENCIA (null)
* -> Constante
1915:    LDC  0, 3(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_ALCONTRARIO (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
1912:    JEQ 0, 4(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1916:    LDA 7, 0(7) 	jmp al final
* <- if
* -> Identificador
1917:     ST  0, 0(6) 	op: push left
1918:     LD  1, 0(6) 	op: load left
1919:   SUB 0, 1, 0	op == 
1920:    JEQ  0, 2(7) 	br if true
1921:    LDC  0, 0(0) 	caso falso
1922:    LDA  7, 1(7) 	salto incodicional
1923:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SELECCIONAR (null)
* * TIPOARBOL_CASO_SENTENCIA (null)
* -> Constante
1924:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_CASO_SENTENCIA (null)
* -> Constante
1925:    LDC  0, 2(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_CASO_SENTENCIA (null)
* -> Constante
1926:    LDC  0, 3(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_ALCONTRARIO (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
1414:    LDA 7, 512(7) 	jmp al final
* <- if
* -> Identificador
* -> Identificador
* -> Identificador
1927:     ST  0, 0(6) 	op: push left
1928:     LD  1, 0(6) 	op: load left
1929:   SUB 0, 1, 0	op == 
1930:    JEQ  0, 2(7) 	br if true
1931:    LDC  0, 0(0) 	caso falso
1932:    LDA  7, 1(7) 	salto incodicional
1933:    LDC  0, 1(0) 	caso verdadero
* <- Op
1934:     ST  0, 0(6) 	op: push left
* -> Identificador
1935:     ST  0, -1(6) 	op: push left
1936:     LD  1, -1(6) 	op: load left
1937:   SUB 0, 1, 0	op == 
1938:    JEQ  0, 2(7) 	br if true
1939:    LDC  0, 0(0) 	caso falso
1940:    LDA  7, 1(7) 	salto incodicional
1941:    LDC  0, 1(0) 	caso verdadero
* <- Op
1942:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* -> Identificador
1943:     ST  0, 0(6) 	op: push left
1944:     LD  1, 0(6) 	op: load left
1945:   SUB 0, 1, 0	op == 
1946:    JEQ  0, 2(7) 	br if true
1947:    LDC  0, 0(0) 	caso falso
1948:    LDA  7, 1(7) 	salto incodicional
1949:    LDC  0, 1(0) 	caso verdadero
* <- Op
* -> Identificador
1950:     ST  0, 0(6) 	op: push left
1951:     LD  1, 0(6) 	op: load left
1952:   SUB 0, 1, 0	op == 
1953:    JEQ  0, 2(7) 	br if true
1954:    LDC  0, 0(0) 	caso falso
1955:    LDA  7, 1(7) 	salto incodicional
1956:    LDC  0, 1(0) 	caso verdadero
* <- Op
1957:     ST  0, 0(6) 	op: push left
* -> Identificador
1958:     ST  0, -1(6) 	op: push left
1959:     LD  1, -1(6) 	op: load left
1960:   SUB 0, 1, 0	op == 
1961:    JEQ  0, 2(7) 	br if true
1962:    LDC  0, 0(0) 	caso falso
1963:    LDA  7, 1(7) 	salto incodicional
1964:    LDC  0, 1(0) 	caso verdadero
* <- Op
1965:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* -> Identificador
* -> Identificador
1966:     ST  0, 0(6) 	op: push left
1967:     LD  1, 0(6) 	op: load left
1968:   SUB 0, 1, 0	op == 
1969:    JEQ  0, 2(7) 	br if true
1970:    LDC  0, 0(0) 	caso falso
1971:    LDA  7, 1(7) 	salto incodicional
1972:    LDC  0, 1(0) 	caso verdadero
* <- Op
1973:     ST  0, 0(6) 	op: push left
* -> Identificador
1974:     ST  0, -1(6) 	op: push left
1975:     LD  1, -1(6) 	op: load left
1976:   SUB 0, 1, 0	op == 
1977:    JEQ  0, 2(7) 	br if true
1978:    LDC  0, 0(0) 	caso falso
1979:    LDA  7, 1(7) 	salto incodicional
1980:    LDC  0, 1(0) 	caso verdadero
* <- Op
1981:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* -> Identificador
1982:     ST  0, 0(6) 	op: push left
1983:     LD  1, 0(6) 	op: load left
1984:   SUB 0, 1, 0	op == 
1985:    JEQ  0, 2(7) 	br if true
1986:    LDC  0, 0(0) 	caso falso
1987:    LDA  7, 1(7) 	salto incodicional
1988:    LDC  0, 1(0) 	caso verdadero
* <- Op
* -> Identificador
1989:     ST  0, 0(6) 	op: push left
1990:     LD  1, 0(6) 	op: load left
1991:   SUB 0, 1, 0	op == 
1992:    JEQ  0, 2(7) 	br if true
1993:    LDC  0, 0(0) 	caso falso
1994:    LDA  7, 1(7) 	salto incodicional
1995:    LDC  0, 1(0) 	caso verdadero
* <- Op
* -> Identificador
1996:     ST  0, 0(6) 	op: push left
1997:     LD  1, 0(6) 	op: load left
1998:   SUB 0, 1, 0	op == 
1999:    JEQ  0, 2(7) 	br if true
2000:    LDC  0, 0(0) 	caso falso
2001:    LDA  7, 1(7) 	salto incodicional
2002:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2003:    LDC  0, 32(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* -> Identificador
2004:     ST  0, 0(6) 	op: push left
2005:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
2006:    JEQ 0, 1(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* -> Identificador
2008:     ST  0, 0(6) 	op: push left
2009:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* -> Identificador
2011:     ST  0, 0(6) 	op: push left
2012:     LD  1, 0(6) 	op: load left
2013:   SUB 0, 1, 0	op == 
2014:    JEQ  0, 2(7) 	br if true
2015:    LDC  0, 0(0) 	caso falso
2016:    LDA  7, 1(7) 	salto incodicional
2017:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2019:     ST  0, 0(6) 	op: push left
2020:     LD  1, 0(6) 	op: load left
2021:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
2018:    JEQ 0, 4(7) 	si: jmp a sino
* -> Identificador
2023:     ST  0, 0(6) 	op: push left
2024:     LD  1, 0(6) 	op: load left
2025:   SUB 0, 1, 0	op == 
2026:    JEQ  0, 2(7) 	br if true
2027:    LDC  0, 0(0) 	caso falso
2028:    LDA  7, 1(7) 	salto incodicional
2029:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2031:     ST  0, 0(6) 	op: push left
2032:     LD  1, 0(6) 	op: load left
2033:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
2030:    JEQ 0, 4(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2035:     ST  0, 0(6) 	op: push left
2036:     LD  1, 0(6) 	op: load left
2037:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
2038:     ST  0, 0(6) 	op: push left
2039:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2041:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
2040:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2043:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
2042:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
2044:     ST  0, 0(6) 	op: push left
2045:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2046:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2047:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
2034:    LDA 7, 13(7) 	jmp al final
* <- if
* -> Identificador
2048:     ST  0, 0(6) 	op: push left
2049:     LD  1, 0(6) 	op: load left
2050:   SUB 0, 1, 0	op == 
2051:    JEQ  0, 2(7) 	br if true
2052:    LDC  0, 0(0) 	caso falso
2053:    LDA  7, 1(7) 	salto incodicional
2054:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2055:     ST  0, 0(6) 	op: push left
2056:     LD  1, 0(6) 	op: load left
2057:   ADD 0, 1, 0	op +
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2058:     ST  0, 0(6) 	op: push left
2059:     LD  1, 0(6) 	op: load left
2060:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
2061:     ST  0, 0(6) 	op: push left
2062:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2064:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
2063:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2066:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
2065:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
2067:     ST  0, 0(6) 	op: push left
2068:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2069:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2070:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
2022:    LDA 7, 48(7) 	jmp al final
* <- if
* -> Identificador
2071:     ST  0, 0(6) 	op: push left
2072:     LD  1, 0(6) 	op: load left
2073:   SUB 0, 1, 0	op == 
2074:    JEQ  0, 2(7) 	br if true
2075:    LDC  0, 0(0) 	caso falso
2076:    LDA  7, 1(7) 	salto incodicional
2077:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2078:     ST  0, 0(6) 	op: push left
2079:     LD  1, 0(6) 	op: load left
2080:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
2081:     ST  0, 0(6) 	op: push left
2082:     LD  1, 0(6) 	op: load left
2083:   SUB 0, 1, 0	op == 
2084:    JEQ  0, 2(7) 	br if true
2085:    LDC  0, 0(0) 	caso falso
2086:    LDA  7, 1(7) 	salto incodicional
2087:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2089:     ST  0, 0(6) 	op: push left
2090:     LD  1, 0(6) 	op: load left
2091:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
2088:    JEQ 0, 4(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2093:     ST  0, 0(6) 	op: push left
2094:     LD  1, 0(6) 	op: load left
2095:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
2096:     ST  0, 0(6) 	op: push left
2097:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2099:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
2098:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2101:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
2100:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
2102:     ST  0, 0(6) 	op: push left
2103:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2104:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2105:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
2092:    LDA 7, 13(7) 	jmp al final
* <- if
* -> Identificador
2106:     ST  0, 0(6) 	op: push left
2107:     LD  1, 0(6) 	op: load left
2108:   SUB 0, 1, 0	op == 
2109:    JEQ  0, 2(7) 	br if true
2110:    LDC  0, 0(0) 	caso falso
2111:    LDA  7, 1(7) 	salto incodicional
2112:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2113:     ST  0, 0(6) 	op: push left
2114:     LD  1, 0(6) 	op: load left
2115:   ADD 0, 1, 0	op +
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2116:     ST  0, 0(6) 	op: push left
2117:     LD  1, 0(6) 	op: load left
2118:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
2119:     ST  0, 0(6) 	op: push left
2120:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2122:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
2121:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2124:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
2123:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
2125:     ST  0, 0(6) 	op: push left
2126:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2127:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2128:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
2010:    JEQ 0, 119(7) 	si: jmp a sino
2129:    LDA 7, 0(7) 	jmp al final
* <- if
* -> Identificador
2130:     ST  0, 0(6) 	op: push left
2131:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* -> Identificador
2132:     ST  0, 0(6) 	op: push left
2133:     LD  1, 0(6) 	op: load left
2134:   SUB 0, 1, 0	op == 
2135:    JEQ  0, 2(7) 	br if true
2136:    LDC  0, 0(0) 	caso falso
2137:    LDA  7, 1(7) 	salto incodicional
2138:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2140:     ST  0, 0(6) 	op: push left
2141:     LD  1, 0(6) 	op: load left
2142:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
2139:    JEQ 0, 4(7) 	si: jmp a sino
* -> Identificador
2144:     ST  0, 0(6) 	op: push left
2145:     LD  1, 0(6) 	op: load left
2146:   SUB 0, 1, 0	op == 
2147:    JEQ  0, 2(7) 	br if true
2148:    LDC  0, 0(0) 	caso falso
2149:    LDA  7, 1(7) 	salto incodicional
2150:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2152:     ST  0, 0(6) 	op: push left
2153:     LD  1, 0(6) 	op: load left
2154:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
2151:    JEQ 0, 4(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2156:     ST  0, 0(6) 	op: push left
2157:     LD  1, 0(6) 	op: load left
2158:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
2159:     ST  0, 0(6) 	op: push left
2160:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2162:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
2161:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2164:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
2163:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
2165:     ST  0, 0(6) 	op: push left
2166:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2167:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2168:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
2155:    LDA 7, 13(7) 	jmp al final
* <- if
* -> Identificador
2169:     ST  0, 0(6) 	op: push left
2170:     LD  1, 0(6) 	op: load left
2171:   SUB 0, 1, 0	op == 
2172:    JEQ  0, 2(7) 	br if true
2173:    LDC  0, 0(0) 	caso falso
2174:    LDA  7, 1(7) 	salto incodicional
2175:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2176:     ST  0, 0(6) 	op: push left
2177:     LD  1, 0(6) 	op: load left
2178:   ADD 0, 1, 0	op +
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2179:     ST  0, 0(6) 	op: push left
2180:     LD  1, 0(6) 	op: load left
2181:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
2182:     ST  0, 0(6) 	op: push left
2183:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2185:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
2184:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2187:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
2186:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
2188:     ST  0, 0(6) 	op: push left
2189:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2190:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2191:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
2143:    LDA 7, 48(7) 	jmp al final
* <- if
* -> Identificador
2192:     ST  0, 0(6) 	op: push left
2193:     LD  1, 0(6) 	op: load left
2194:   SUB 0, 1, 0	op == 
2195:    JEQ  0, 2(7) 	br if true
2196:    LDC  0, 0(0) 	caso falso
2197:    LDA  7, 1(7) 	salto incodicional
2198:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2199:     ST  0, 0(6) 	op: push left
2200:     LD  1, 0(6) 	op: load left
2201:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
2202:     ST  0, 0(6) 	op: push left
2203:     LD  1, 0(6) 	op: load left
2204:   SUB 0, 1, 0	op == 
2205:    JEQ  0, 2(7) 	br if true
2206:    LDC  0, 0(0) 	caso falso
2207:    LDA  7, 1(7) 	salto incodicional
2208:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2210:     ST  0, 0(6) 	op: push left
2211:     LD  1, 0(6) 	op: load left
2212:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
2209:    JEQ 0, 4(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2214:     ST  0, 0(6) 	op: push left
2215:     LD  1, 0(6) 	op: load left
2216:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
2217:     ST  0, 0(6) 	op: push left
2218:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2220:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
2219:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2222:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
2221:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
2223:     ST  0, 0(6) 	op: push left
2224:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2225:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2226:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
2213:    LDA 7, 13(7) 	jmp al final
* <- if
* -> Identificador
2227:     ST  0, 0(6) 	op: push left
2228:     LD  1, 0(6) 	op: load left
2229:   SUB 0, 1, 0	op == 
2230:    JEQ  0, 2(7) 	br if true
2231:    LDC  0, 0(0) 	caso falso
2232:    LDA  7, 1(7) 	salto incodicional
2233:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2234:     ST  0, 0(6) 	op: push left
2235:     LD  1, 0(6) 	op: load left
2236:   ADD 0, 1, 0	op +
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2237:     ST  0, 0(6) 	op: push left
2238:     LD  1, 0(6) 	op: load left
2239:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
2240:     ST  0, 0(6) 	op: push left
2241:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2243:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
2242:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2245:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
2244:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
2246:     ST  0, 0(6) 	op: push left
2247:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2248:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2249:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
2007:    LDA 7, 242(7) 	jmp al final
* <- if
* -> Identificador
2250:     ST  0, 0(6) 	op: push left
2251:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* -> Identificador
2252:     ST  0, 0(6) 	op: push left
2253:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* -> Identificador
2255:     ST  0, 0(6) 	op: push left
2256:     LD  1, 0(6) 	op: load left
2257:   SUB 0, 1, 0	op == 
2258:    JEQ  0, 2(7) 	br if true
2259:    LDC  0, 0(0) 	caso falso
2260:    LDA  7, 1(7) 	salto incodicional
2261:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2263:     ST  0, 0(6) 	op: push left
2264:     LD  1, 0(6) 	op: load left
2265:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
2262:    JEQ 0, 4(7) 	si: jmp a sino
* -> Identificador
2267:     ST  0, 0(6) 	op: push left
2268:     LD  1, 0(6) 	op: load left
2269:   SUB 0, 1, 0	op == 
2270:    JEQ  0, 2(7) 	br if true
2271:    LDC  0, 0(0) 	caso falso
2272:    LDA  7, 1(7) 	salto incodicional
2273:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2275:     ST  0, 0(6) 	op: push left
2276:     LD  1, 0(6) 	op: load left
2277:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
2274:    JEQ 0, 4(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2279:     ST  0, 0(6) 	op: push left
2280:     LD  1, 0(6) 	op: load left
2281:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
2282:     ST  0, 0(6) 	op: push left
2283:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2285:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
2284:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2287:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
2286:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
2288:     ST  0, 0(6) 	op: push left
2289:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2290:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2291:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
2278:    LDA 7, 13(7) 	jmp al final
* <- if
* -> Identificador
2292:     ST  0, 0(6) 	op: push left
2293:     LD  1, 0(6) 	op: load left
2294:   SUB 0, 1, 0	op == 
2295:    JEQ  0, 2(7) 	br if true
2296:    LDC  0, 0(0) 	caso falso
2297:    LDA  7, 1(7) 	salto incodicional
2298:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2299:     ST  0, 0(6) 	op: push left
2300:     LD  1, 0(6) 	op: load left
2301:   ADD 0, 1, 0	op +
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2302:     ST  0, 0(6) 	op: push left
2303:     LD  1, 0(6) 	op: load left
2304:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
2305:     ST  0, 0(6) 	op: push left
2306:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2308:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
2307:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2310:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
2309:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
2311:     ST  0, 0(6) 	op: push left
2312:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2313:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2314:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
2266:    LDA 7, 48(7) 	jmp al final
* <- if
* -> Identificador
2315:     ST  0, 0(6) 	op: push left
2316:     LD  1, 0(6) 	op: load left
2317:   SUB 0, 1, 0	op == 
2318:    JEQ  0, 2(7) 	br if true
2319:    LDC  0, 0(0) 	caso falso
2320:    LDA  7, 1(7) 	salto incodicional
2321:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2322:     ST  0, 0(6) 	op: push left
2323:     LD  1, 0(6) 	op: load left
2324:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
2325:     ST  0, 0(6) 	op: push left
2326:     LD  1, 0(6) 	op: load left
2327:   SUB 0, 1, 0	op == 
2328:    JEQ  0, 2(7) 	br if true
2329:    LDC  0, 0(0) 	caso falso
2330:    LDA  7, 1(7) 	salto incodicional
2331:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2333:     ST  0, 0(6) 	op: push left
2334:     LD  1, 0(6) 	op: load left
2335:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
2332:    JEQ 0, 4(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2337:     ST  0, 0(6) 	op: push left
2338:     LD  1, 0(6) 	op: load left
2339:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
2340:     ST  0, 0(6) 	op: push left
2341:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2343:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
2342:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2345:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
2344:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
2346:     ST  0, 0(6) 	op: push left
2347:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2348:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2349:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
2336:    LDA 7, 13(7) 	jmp al final
* <- if
* -> Identificador
2350:     ST  0, 0(6) 	op: push left
2351:     LD  1, 0(6) 	op: load left
2352:   SUB 0, 1, 0	op == 
2353:    JEQ  0, 2(7) 	br if true
2354:    LDC  0, 0(0) 	caso falso
2355:    LDA  7, 1(7) 	salto incodicional
2356:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2357:     ST  0, 0(6) 	op: push left
2358:     LD  1, 0(6) 	op: load left
2359:   ADD 0, 1, 0	op +
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2360:     ST  0, 0(6) 	op: push left
2361:     LD  1, 0(6) 	op: load left
2362:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
2363:     ST  0, 0(6) 	op: push left
2364:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2366:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
2365:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2368:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
2367:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
2369:     ST  0, 0(6) 	op: push left
2370:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2371:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2372:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
2254:    JEQ 0, 119(7) 	si: jmp a sino
2373:    LDA 7, 0(7) 	jmp al final
* <- if
* -> Identificador
2374:     ST  0, 0(6) 	op: push left
2375:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* -> Identificador
2376:     ST  0, 0(6) 	op: push left
2377:     LD  1, 0(6) 	op: load left
2378:   SUB 0, 1, 0	op == 
2379:    JEQ  0, 2(7) 	br if true
2380:    LDC  0, 0(0) 	caso falso
2381:    LDA  7, 1(7) 	salto incodicional
2382:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2384:     ST  0, 0(6) 	op: push left
2385:     LD  1, 0(6) 	op: load left
2386:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
2383:    JEQ 0, 4(7) 	si: jmp a sino
* -> Identificador
2388:     ST  0, 0(6) 	op: push left
2389:     LD  1, 0(6) 	op: load left
2390:   SUB 0, 1, 0	op == 
2391:    JEQ  0, 2(7) 	br if true
2392:    LDC  0, 0(0) 	caso falso
2393:    LDA  7, 1(7) 	salto incodicional
2394:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2396:     ST  0, 0(6) 	op: push left
2397:     LD  1, 0(6) 	op: load left
2398:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
2395:    JEQ 0, 4(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2400:     ST  0, 0(6) 	op: push left
2401:     LD  1, 0(6) 	op: load left
2402:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
2403:     ST  0, 0(6) 	op: push left
2404:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2406:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
2405:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2408:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
2407:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
2409:     ST  0, 0(6) 	op: push left
2410:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2411:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2412:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
2399:    LDA 7, 13(7) 	jmp al final
* <- if
* -> Identificador
2413:     ST  0, 0(6) 	op: push left
2414:     LD  1, 0(6) 	op: load left
2415:   SUB 0, 1, 0	op == 
2416:    JEQ  0, 2(7) 	br if true
2417:    LDC  0, 0(0) 	caso falso
2418:    LDA  7, 1(7) 	salto incodicional
2419:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2420:     ST  0, 0(6) 	op: push left
2421:     LD  1, 0(6) 	op: load left
2422:   ADD 0, 1, 0	op +
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2423:     ST  0, 0(6) 	op: push left
2424:     LD  1, 0(6) 	op: load left
2425:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
2426:     ST  0, 0(6) 	op: push left
2427:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2429:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
2428:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2431:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
2430:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
2432:     ST  0, 0(6) 	op: push left
2433:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2434:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2435:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
2387:    LDA 7, 48(7) 	jmp al final
* <- if
* -> Identificador
2436:     ST  0, 0(6) 	op: push left
2437:     LD  1, 0(6) 	op: load left
2438:   SUB 0, 1, 0	op == 
2439:    JEQ  0, 2(7) 	br if true
2440:    LDC  0, 0(0) 	caso falso
2441:    LDA  7, 1(7) 	salto incodicional
2442:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2443:     ST  0, 0(6) 	op: push left
2444:     LD  1, 0(6) 	op: load left
2445:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
2446:     ST  0, 0(6) 	op: push left
2447:     LD  1, 0(6) 	op: load left
2448:   SUB 0, 1, 0	op == 
2449:    JEQ  0, 2(7) 	br if true
2450:    LDC  0, 0(0) 	caso falso
2451:    LDA  7, 1(7) 	salto incodicional
2452:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2454:     ST  0, 0(6) 	op: push left
2455:     LD  1, 0(6) 	op: load left
2456:   ADD 0, 1, 0	op +
* <- Op
* si: salta hasta el final
2453:    JEQ 0, 4(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2458:     ST  0, 0(6) 	op: push left
2459:     LD  1, 0(6) 	op: load left
2460:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
2461:     ST  0, 0(6) 	op: push left
2462:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2464:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
2463:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2466:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
2465:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
2467:     ST  0, 0(6) 	op: push left
2468:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2469:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2470:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
2457:    LDA 7, 13(7) 	jmp al final
* <- if
* -> Identificador
2471:     ST  0, 0(6) 	op: push left
2472:     LD  1, 0(6) 	op: load left
2473:   SUB 0, 1, 0	op == 
2474:    JEQ  0, 2(7) 	br if true
2475:    LDC  0, 0(0) 	caso falso
2476:    LDA  7, 1(7) 	salto incodicional
2477:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2478:     ST  0, 0(6) 	op: push left
2479:     LD  1, 0(6) 	op: load left
2480:   ADD 0, 1, 0	op +
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Identificador
2481:     ST  0, 0(6) 	op: push left
2482:     LD  1, 0(6) 	op: load left
2483:   ADD 0, 1, 0	op +
* <- Op
* -> Identificador
2484:     ST  0, 0(6) 	op: push left
2485:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2487:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
2486:    JEQ 0, 2(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2489:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
2488:    LDA 7, 1(7) 	jmp al final
* <- if
* -> Identificador
2490:     ST  0, 0(6) 	op: push left
2491:     LD  1, 0(6) 	op: load left
* BUG:operador desconocido
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2492:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* -> Constante
2493:    LDC  0, 0(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* -> Identificador
2494:     ST  0, 0(6) 	op: push left
2495:     LD  1, 0(6) 	op: load left
2496:   SUB 0, 1, 0	op == 
2497:    JEQ  0, 2(7) 	br if true
2498:    LDC  0, 0(0) 	caso falso
2499:    LDA  7, 1(7) 	salto incodicional
2500:    LDC  0, 1(0) 	caso verdadero
* <- Op
* si: saltar a else aqui
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SELECCIONAR (null)
* * TIPOARBOL_CASO_SENTENCIA (null)
* -> Constante
2502:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_CASO_SENTENCIA (null)
* -> Constante
2503:    LDC  0, 2(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_CASO_SENTENCIA (null)
* -> Constante
2504:    LDC  0, 3(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_ALCONTRARIO (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* si: salta hasta el final
2501:    JEQ 0, 4(7) 	si: jmp a sino
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
2505:    LDA 7, 0(7) 	jmp al final
* <- if
* -> Identificador
2506:     ST  0, 0(6) 	op: push left
2507:     LD  1, 0(6) 	op: load left
2508:   SUB 0, 1, 0	op == 
2509:    JEQ  0, 2(7) 	br if true
2510:    LDC  0, 0(0) 	caso falso
2511:    LDA  7, 1(7) 	salto incodicional
2512:    LDC  0, 1(0) 	caso verdadero
* <- Op
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SELECCIONAR (null)
* * TIPOARBOL_CASO_SENTENCIA (null)
* -> Constante
2513:    LDC  0, 1(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_CASO_SENTENCIA (null)
* -> Constante
2514:    LDC  0, 2(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_CASO_SENTENCIA (null)
* -> Constante
2515:    LDC  0, 3(0) 	carga constante
* <- Constante
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_ALCONTRARIO (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_COMPUESTA (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_SENTENCIA (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* * TIPOARBOL_SENTENCIA_EXPRESION (null)
* Fin de ejecucion
2516:  HALT 0, 0, 0	
